{"openapi":"3.0.2","info":{"title":"CostCenter","version":"3.1.0","description":"Master Data Type CostCenter (sap.odm.finance.costobject.CostCenter) from ODM package version 3.1.0 is compatible with the following ODM package versions: 1.0.2, 1.1.0, 2.0.0, 2.3.0, 2.2.0, 2.1.1, 3.0.0, 3.1.0.\nManage the replication of records for master data type CostCenter to keep a consistent view on master data.\nClients send change requests to inform Master Data Integration about local changes to CostCenter records. Master Data Integration asynchronously processes the change request. If the service accepts the change request, Master Data Integration changes its own copy of the records accordingly and provides a change event to connected clients, including the client that originally submitted the change request.\nMaster Data Integration provides change events to inform clients about changes in the CostCenter records visible to clients. Which clients sees which change events is governed by the distribution model configured by the customer. Clients should poll in regular intervals for change events."},"x-sap-shortText":"Endpoints for the integration of CostCenter records based on ODM package version 3.1.0.","x-sap-api-type":"REST","x-sap-visibility":"Public","x-sap-releaseStatus":"Active","x-sap-extensible":{"supported":"manual","description":"See topic [Extensibility](https://help.sap.com/docs/master-data-integration/sap-master-data-integration-prod/extensibility) in the SAP Master Data Integration Help Page for instructions on how to manage extensions."},"externalDocs":{"description":"SAP Master Data Integration on the SAP Help Portal.","url":"https://help.sap.com/docs/SAP_MASTER_DATA_INTEGRATION?version=CLOUD&locale=en-US"},"servers":[{"url":"https://one-mds.cfapps.{region}.hana.ondemand.com","description":"The base URL of the service.","variables":{"region":{"default":"eu10","description":"The region of the service.","enum":["ap10","ap11","cn40","eu10","eu11","us10"]}}}],"security":[{"OAuth2":[]}],"paths":{"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/events":{"get":{"tags":["Change Events"],"summary":"Retrieve changes of all master data entity instances of the same entity type.","description":"The log contains change events which encode changes to specific master data instances.\n\nSystem which sends change requests to the requests endpoint also find rejections here in case the service did not accept a specific change request.\n","parameters":[{"name":"$deltatoken","in":"query","schema":{"type":"string"},"description":"The information that Master Data Integration has already sent to the client is encoded in a delta token. The `$deltatoken` can be used to fetch the next set of events.\nThe delta token is part of the `@odata.nextLink`/`@odata.deltaLink` field in the response.\nClients should use the provided next link or delta link for subsequent requests. Client must not attempt to append system query options to the next link or delta link.\nDelta tokens can become outdated. Requesting change events with an outdated delta token will lead to an \"outdated delta token error\" (409 Conflict).\n"},{"name":"pauseAtPhaseTransition","in":"query","schema":{"type":"boolean"},"description":"This flag is used to control whether Master Data Integration immediately starts the delta load after the initial load.\nIf this flag is not given or false, Master Data Integration may immediately continue with events from the next phase after a phase transition. For example, if an entity instance changes after the initial load started, the corresponding change event might show up in the same response as the last change event of the initial load. That is, the delta load phase would start immediately after the initial load phase.\nIf this flag is true, Master Data Integration will pause at the phase transition from initial load to delta load. That is, change events from initial load and delta load are not included in the same response, but Master Data Integration will finish the initial load with a `@odata.deltaLink` which can be used to start the delta load.\nNote that there is (currently) no guarantee of a pause at other phase transitions (for example, after processing a filter change).\n"},{"name":"includeInactiveLocalIds","in":"query","schema":{"type":"boolean"},"description":"Setting this parameter to true will show local identifiers with inactive status associated with master data entity instance."},{"$ref":"#/components/parameters/Accept"},{"name":"Prefer","in":"header","schema":{"type":"string"},"description":"The Prefer request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request. See the [RFC7240](https://tools.ietf.org/html/rfc7240) for more details. MDI currently supports `odata.maxpagesize` value in Prefer. Specify \"odata.maxpagesize=n\" where `n` is the preferred number of events in the log send as response. This number is not binding and the master data integration service may send more or less events than the preferred amount.\n"},{"name":"IncludeAcceptedEvent","in":"header","schema":{"type":"boolean"},"description":"Setting this parameter to true will show accepted events as confirmations."},{"name":"IncludePrevious","in":"header","schema":{"type":"boolean"},"description":"Setting this parameter to true will include the previous state of an instance for each change event whenever possible."},{"name":"IncludeLatestChangeToken","in":"header","description":"Setting this parameter to true will include the latest change token that lead to the current state in the event log for initial load (Log API request without delta token). As in the continuous read with delta token, the change tokens will only be visible to the system that has authored the corresponding change request.","schema":{"type":"boolean"}},{"name":"IncludeHeader","in":"header","schema":{"type":"boolean"},"description":"Setting this parameter to true will include additional metadata for each record in a top-level field `header`."}],"responses":{"200":{"$ref":"#/components/responses/200-rest"},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"409":{"$ref":"#/components/responses/409"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/requests":{"post":{"tags":["Change Requests"],"summary":"Request changes to one master data entity instance.","description":"Performs a change request for a master data entity instance issued by upstream system in asynchronous manner.\nA successful 202 (Accepted) status code indicates that the change request has been accepted for asynchronous processing.\n","parameters":[{"$ref":"#/components/parameters/Content-Type"}],"requestBody":{"description":"The request body determines which action(s) are triggered on the master data integration service.\n\nWhen a master data entity instance is created or changed in a source system, the source system asynchronously sends a change request to master data integration.\nThe change request contains a description of how the source system wants to change the properties of the master data entity instance.\nMaster data integration processes the change request into a change event by applying the requested changes to the current state of the master data entity instance.\n\nThe `operation` field determines the type of the **change request operation**.\nThere are different kinds of change request operations for systems to request modification of master data.\nThe different operations are described as part of the schema.\n","required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/Create"},{"$ref":"#/components/schemas/Update"},{"$ref":"#/components/schemas/ForceUpdate"},{"$ref":"#/components/schemas/Patch"},{"$ref":"#/components/schemas/ForcePatch"},{"$ref":"#/components/schemas/Delete"},{"$ref":"#/components/schemas/ForceDelete"},{"$ref":"#/components/schemas/PatchMetadata"}]}}}},"responses":{"202":{"$ref":"#/components/responses/202"},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"408":{"$ref":"#/components/responses/408"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}},"patch":{"tags":["Change Requests"],"summary":"Request changes to multiple master data entity instances of the same entity type.","description":"Change requests in a batch requests are handled asynchronously and independently.\n\nThe response field has the result for every change request correlated by change token.\n","parameters":[{"$ref":"#/components/parameters/Content-Type"}],"requestBody":{"description":"The request body determines which action(s) are triggered on the master data integration service.\n\nWhen a master data entity instance is created or changed in a source system, the source system asynchronously sends a change request to master data integration.\nThe change request contains a description of how the source system wants to change the properties of the master data entity instance.\nMaster data integration processes the change request into a change event by applying the requested changes to the current state of the master data entity instance.\n\nThe `operation` field determines the type of the **change request operation**.\nThere are different kinds of change request operations for systems to request modification of master data.\nThe different operations are described as part of the schema.\n","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchRequest"}}}},"responses":{"202":{"$ref":"#/components/responses/202-batch"},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"408":{"$ref":"#/components/responses/408"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/extensions":{"put":{"tags":["Extensibility"],"summary":"Extensions requests to define extensions centrally for all interfaces i.e. REST, SOAP and OData.","description":"The model structure of CostCenter records within Master Data Integration can be extended with additional attributes.\nIt allows the creation of new attributes at every level of the CostCenter model.\n\nConfigured extensions affect the schema of the Change Requests and Change Events.\n","parameters":[],"requestBody":{"description":"Extension request has details about extension field name, SOAP target and other configuration parameters. Extension request can be created with only REST parameters. Extension Request send with SOAP and REST parameters creates extension field in secondary persistency and primary persistency","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Extensions"}}}},"responses":{"202":{"description":"The 202 (Accepted) status code indicates that the extensions request has\nbeen accepted\n\nThe referenced client will receive the retransmitted record when catching up\non extension events."},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/extensions/{extensionId}/status":{"get":{"tags":["Extensibility"],"summary":"Query the status of an extension request.","description":"Extensions requests are processed asynchronously.\nThe status of the extension request is updated upon processing and reflected via the status code.\n","parameters":[{"name":"extensionId","in":"path","required":true,"description":"Unique id of the extension","schema":{"type":"string","format":"UUID"}}],"responses":{"200":{"description":"The 200 (OK) status code indicates that the extensions request has been accepted.\n\nThe referenced client will receive the retransmitted record when catching up\non extension events."},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/api/instance":{"get":{"tags":["Schema"],"summary":"Retrieve the JSON schema describing the instance payload for the the respective entity type and version.","description":"Retrieve the JSON schema describing the instance payload for CostCenter records in ODM package version 3.1.0.\n\nThis contains most of the constraints from the ODM, except enum.\n\nThe schema describes the payload structure of the `instance` data in [.../requests](#/Change%20requests/post_v1_odm__3.1.0___sap.odm.finance.costobject.CostCenter__requests) and [../events API](#/Change%20events/get_v1_odm__3.1.0___sap.odm.finance.costobject.CostCenter__events).\n","parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompleteInstancePayload"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/deltaToken":{"get":{"tags":["Delta Token"],"summary":"Retrieves a delta link for an entity denoting to the latest event or an event close to a timestamp .","description":"The Delta Token API computes a delta token for a provided entity type as follows:\nIn case the client provides a valid timestamp that is no older than the tenant's retention period, a `nextLink` is computed from the provided valid timestamp.\nIn case of an invalid or too old timestamp the delta token API responds with an error.\nIn case no timestamp is supplied a `deltaLink` pointing to the latest event is provided.\nThis API is inaccurate meaning that there is no guarantee that the `nextLink` returned point to the closest event to the timestamp provided. It points to a point that is roughly close to the provided timestamp.\nUsing this API voids any consistency guarantees provided by SAP Master Data Integration. By using this API the client accepts the transfer of risk resulting from possible DPP violations or inconsistent state after missing deletion events, reconciliation events, filter changes, or other that would have been otherwise replicated in an initial load.\n","parameters":[{"name":"timestamp","in":"query","schema":{"type":"string","description":"ISO8601 compliant timestamp","example":"2022-11-03T14:11:40.859Z","format":"date-time"},"description":"A timestamp to hint an approximate point to the delta token api at which it retrieves the `nextLink`. If not provided, the api generates a `deltaLink` of the latest records for the entity type.\n"}],"responses":{"200":{"description":"The `nextLink` or `deltaLink` have been successfully computed and are available\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeltaTokenResponse"}}}},"400":{"$ref":"#/components/responses/400"},"404":{"$ref":"#/components/responses/404"},"500":{"$ref":"#/components/responses/500"}}}},"/v1/odm/3.1.0/sap.odm.finance.costobject.CostCenter/reconciliations":{"post":{"tags":["Reconciliation"],"summary":"Request a retransmission of a specific record to a specific client.","description":"A business user having the role `ReconciliationAdmin` can request the retransmission of a specific record to a specific client.\nThe record is identified by the record's identifier.\nThe client is identified by the service instance id.\n\nThe client will receive records scheduled for retransmission when polling for change events.\n","externalDocs":{"url":"https://help.sap.com/docs/master-data-integration/sap-master-data-integration-prod/reconciliation","description":"Feature description on the SAP Help Portal."},"security":[{"OAuth2":["uaa.user","Reconciliation.Write"]}],"parameters":[],"requestBody":{"description":"A reconciliation request contains one or multiple entries to identify `(record, client)` pairs.","required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/ReconciliationSingle"},{"$ref":"#/components/schemas/ReconciliationBulk"}]}}}},"responses":{"202":{"description":"The 202 (Accepted) status code indicates that the reconciliation request has\nbeen accepted\n\nThe referenced client will receive the retransmitted record when catching up\non change events."},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"404":{"$ref":"#/components/responses/404"},"405":{"$ref":"#/components/responses/405"},"406":{"$ref":"#/components/responses/406"},"500":{"$ref":"#/components/responses/500"},"503":{"$ref":"#/components/responses/503"},"5XX":{"$ref":"#/components/responses/5XX"}}}}},"components":{"headers":{"Retry-After":{"schema":{"type":"integer"},"description":"If present, indicates how long the client should wait before making a follow-up request.\n\nThe non-negative integer indicates the seconds to delay before the next request.\n"}},"parameters":{"Accept":{"name":"Accept","in":"header","description":"The Accept request header is used by clients to indicate preferences regarding the response media types.\n\nAdding the `IEEE754Compatible=true` format parameter indicates that the client is able to process numbers with higher precision and the service will serialize `Int64` and `Decimal` numbers as strings.\n\nIf specified as `IEEE754Compatible=false`, the service will serialize all numbers as JSON numbers.\n\nIf not specified, the service will default to the behavior of `IEEE754Compatible=false`.\n\nSee also [RFC9110 - 12.5.1 Accept ](https://www.rfc-editor.org/rfc/rfc9110.html#name-accept), [RFC\n7493](https://www.rfc-editor.org/rfc/rfc7493), and [OData v4.01 - 3.2 Controlling the Representation of Numbers](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_ControllingtheRepresentationofNumber).\n","schema":{"type":"string"}},"Content-Type":{"name":"Content-Type","in":"header","description":"The Content-Type request header is used by clients to indicate the media type of the request payload.\n\nAdding the `IEEE754Compatible=true` format parameter indicates that the client is sending Int64 and Decimal numbers serialized as strings to avoid loss of precision.\n\nIf specified as `IEEE754Compatible=false`, the client will serialize all numbers as JSON numbers in the payload.\n\nThe service will reject requests with a mismatch between specified Content-Type media type and request payload.\n\nIf not specified, the client may use either serialization, JSON numbers or strings, and even mix encodings in the payload.\n**Note**, that this is a deviation from below mentioned specifications.\n\nSee also [RFC9110 - 8.3 Content-Type](https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type), [RFC 7493](https://www.rfc-editor.org/rfc/rfc7493), and [OData v4.01 - 3.2 Controlling the Representation of Numbers](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_ControllingtheRepresentationofNumber).\n","schema":{"type":"string"}}},"schemas":{"ChangeToken":{"description":"A unique string chosen by the sending system for each change request.\n\nMaster Data Integration will process messages with the same change token only once (within a limited time frame).\nThis enables clients to resend change requests, if they run into a timeout and hence do not know whether or not the service processed their change request.\n\nClients can correlate fetched events with change request sent with the changeToken. The changeToken will only be visible to the system which also submitted the change request.\nOther systems accessing the events in the tenant will see the same change event without the change token.\n\nChange tokens are visible to the authoring system when requesting the events with a delta token.\n","type":"string","pattern":"^[A-Za-z0-9_-]{36}$"},"CompleteInstancePayload":{"type":"object","required":["id"],"properties":{"id":{"type":"string","pattern":"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},"displayName":{"type":"string","maxLength":30},"localIdS4":{"type":"object","properties":{"logicalSystem":{"type":"string","maxLength":10},"companyCode":{"type":"string","maxLength":4},"costCenterId":{"type":"string","maxLength":10},"controllingArea":{"type":"string","maxLength":4}}},"isValid":{"type":"array","items":{"type":"object","required":["content"],"properties":{"valid_from":{"type":"string","format":"date"},"valid_to":{"type":"string","format":"date"},"content":{"type":"boolean"}}}},"attributes":{"type":"array","items":{"type":"object","required":["content"],"properties":{"valid_from":{"type":"string","format":"date"},"valid_to":{"type":"string","format":"date"},"content":{"type":"object","properties":{"responsible":{"type":"object","required":["id"],"properties":{"id":{"type":"string","pattern":"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}}},"isBlockedForPrimaryPosting":{"type":"boolean"},"isBlockedForSecondaryPosting":{"type":"boolean"},"name":{"type":"array","items":{"type":"object","required":["lang","content"],"properties":{"lang":{"type":"string","pattern":"^[a-z]{2}(?:-[A-z]{2})?$"},"content":{"type":"string","maxLength":20}}}},"description":{"type":"array","items":{"type":"object","required":["lang","content"],"properties":{"lang":{"type":"string","pattern":"^[a-z]{2}(?:-[A-z]{2})?$"},"content":{"type":"string","maxLength":40}}}},"taxJurisdiction":{"type":"object","required":["code"],"properties":{"code":{"type":"string","maxLength":15}}}}}}}}},"x-sap-root-entity":true,"x-sap-odm-oid":"id","x-sap-odm-entity-name":"CostCenter"},"PartialInstancePayload":{"description":"A JSON object adhering to the `patch` format. Attributes described in the payload will be patched to the existing entity instance.\nMaster Data Integration will strictly ensure that instance adheres to the specified model during inbound validation.\nIf a patch request with an invalid instance is sent to the service it will be rejected and it won't be seen in the events fetched from Master Data Integration.\nPlease have a look at the detailed description about how patches work [Patch in detail](https://github.wdf.sap.corp/pages/re-wunder/ONEmasterdata/#/tutorial-v1/details-requests-api?id=patch-operation-in-detail).\n\nNote that the partial instance payload should at least have the key fields.\n\nDelta operation is used to patch specific elements from composition of many fields. Use delta operation by appending `_delta` to the specified field.\neg. `addressData` is composition of many field from an entity, `addressData_delta` will be used to patch its individual element.\nNote that all key elements must be specified to request a change in individual element.\nPlease have a look at the detailed description of Delta in [Delta in detail](https://github.wdf.sap.corp/pages/re-wunder/ONEmasterdata/#/tutorial-v1/details-requests-api?id=delta-in-detail).\n"},"InstanceIdentifier":{"type":"object","required":["id"],"properties":{"id":{"type":"string","pattern":"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}}},"PreviousVersionId":{"description":"previousVersionId is versionId of the state of the master data entity instance the change request is based on.\n\nThis is necessary to detect situations in which two systems request changes to the same master data entity instance.\nThe version id is sent with each accepted change event in the fetched events from the Master Data Integration as 'versionId'.\n","type":"string","minLength":36,"maxLength":36},"Id":{"description":"The id referencing the instance to delete.\n\nThis directly corresponds to the id field of the entity instance.\nThis could either be a uuid or an OID, based on the ODM model of the entityType.\nNote that the full data of the object to delete is not required when requesting deletion.\n","type":"string"},"Identifier":{"description":"The id uniquely referencing the instance.\n\nThis directly corresponds to the id field of the entity instance.\nThis could either be a uuid or an OID, based on the ODM model of the entityType.\n","type":"string"},"VersionId":{"type":"string","minLength":36,"maxLength":36,"description":"A string value assigned by Master Data Integration to this particular state of the master data entity instance.\nAs master data changes over time objects will be in different states. The `versionId` denotes a specific state of the object.\nFor systems which are exclusively consuming the events from Master Data Integration, it is not strictly necessary to persist these values. They can, however, help in troubleshooting processes.\n"},"LocalId":{"type":"object","description":"local identifiers corresponding to master data entity instance.\n","required":["context","localId"],"properties":{"context":{"$ref":"#/components/schemas/LocalIdContext"},"localId":{"description":"The local identifier of master data entity instance for given context.","type":"string"},"status":{"description":"The status of local identifier of master data entity instance.","type":"string","enum":["active","inactive"]}}},"LocalIdContext":{"type":"object","description":"context for local identifiers corresponding to master data entity instance.\n","required":["application","tenant"],"properties":{"application":{"description":"The application identified for the local identifier.","type":"string"},"tenant":{"description":"The tenant identifier for the local identifier in the application.","type":"string"},"type":{"description":"The fully qualified master data entity type name as defined in the One Domain Model (ODM).","type":"string"},"additionalContext":{"description":"Optional additional details to ensure uniqueness of local identifiers Context.","type":"string"}},"example":{"application":"s4","tenant":"ET_503","type":"sap.odm.finance.costobject.CostCenter","additionalContext":"4132"}},"LocalIdDelta":{"type":"object","description":"delta of local identifiers corresponding to master data entity instance.\n\ndelta operation could be\n- `delete` would result in removing of local identifier from local identifier set if found else fail.\n- `forceDelete` would result in removing of local identifier from local identifier set if found else ignore.\n","required":["context","_operation"],"properties":{"context":{"$ref":"#/components/schemas/LocalIdContext"},"_operation":{"description":"The delta operation to be performed on the local identifier.","type":"string","enum":["delete","forceDelete"]}}},"PatchRequest":{"type":"object","description":"Represents a change to a specific field of a master data instance. This has a syntax derived from the JSON Merge patch [rfc7386](https://tools.ietf.org/html/rfc7386).\n","required":["id"],"properties":{"id":{"$ref":"#/components/schemas/Id"}}},"Create":{"type":"object","description":"Use the change request operation `\"create\"` to replicate a master data entity instance for the first time.\n\nThe given master data instance must adhere to the ODM model.\nThe mandatory instance ID field may be omitted in this change request operation only if the `key ID` field is `UUID`.\nIf it is omitted, Master Data Integration will generate an id and assign it to the object.\nOtherwise, the service will validate the given ID and reject the change request operation in case there is a conflict on the chosen ID.\n","required":["operation","changeToken","instance"],"properties":{"operation":{"description":"Requires operation to be `\"create\"`.","type":"string","enum":["create"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}}},"example":{"operation":"create","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","instance":{"displayName":"Santa's Cost Center"}}},"Update":{"type":"object","description":"Use the change request operation `\"update\"` to update an already replicated master data entity instance by sending the full state.\n\nAn update request, when accepted, will **override** the current state of the referenced object.\nIn particular, an update must adhere to the schema defined by the ODM model.\n\nNote: If only sending changed fields use change request operation operation `\"patch\"` instead.\n","required":["operation","changeToken","instance","previousVersionId"],"properties":{"operation":{"description":"Requires operation to be `\"update\"`.","type":"string","enum":["update"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"previousVersionId":{"$ref":"#/components/schemas/PreviousVersionId"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}}},"example":{"operation":"update","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","previousVersionId":"3e466144-8238-4f41-91a5-bea24198bce7","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d","displayName":"Santa's Cost Center"}}},"ForceUpdate":{"type":"object","description":"The change request operation `\"forceUpdate\"` is a variant of `\"update\"` which is applicable independently of the previous state of the master data entity instance.\nUsing `\"forceUpdate\"` client can request _upsert_ of a master data object which may already be replicated by the service without checking for concurrent updates.\n\nNote that the instance defines the **full state** of the object, not just a patch to a previous version.\nAn update request, when accepted, will **override** the current state of the referenced object.\nIn particular, an update must adhere to the schema defined by the ODM model.\n","required":["operation","changeToken","instance"],"properties":{"operation":{"description":"Requires operation to be either `\"forceUpdate\"` or `\"createOrUpdate\"`.","type":"string","enum":["forceUpdate","createOrUpdate"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}}},"example":{"operation":"forceUpdate","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d","displayName":"Santa's Cost Center"}}},"Patch":{"type":"object","description":"Use the change request operation operation `\"patch\"` to update an already replicated master data entity instance by sending only the updated fields.\n","required":["operation","changeToken","instance","previousVersionId"],"properties":{"operation":{"description":"Requires operation to be `\"patch\"`.","type":"string","enum":["patch"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"previousVersionId":{"$ref":"#/components/schemas/PreviousVersionId"},"instance":{"$ref":"#/components/schemas/PartialInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}}},"example":{"operation":"patch","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","previousVersionId":"3e466144-8238-4f41-91a5-bea24198bce7","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d","displayName":"lorem"}}},"Delta":{"type":"object","description":"Delta operation is used to patch specific elements from composition of many fields. Use delta operation by appending `_delta` to the specified field. eg. `addressData` is composition of many field from an entity, `addressData_delta` will be used to patch its individual element. Note that all key elements must be specified to request a change in individual element. Please have a look at the detailed description of Delta in [Delta in detail](https://github.wdf.sap.corp/pages/re-wunder/ONEmasterdata/#/tutorial-v1/details-requests-api?id=delta-in-detail).\n"},"ForcePatch":{"type":"object","description":"The change request operation `\"forcePatch\"` is a variant of `\"patch\"` which is applicable independently of the previous state of the master data entity instance.\n\nAs with `\"patch\"`, the change request operation contains only the changed fields of the master data entity instance.\n\nIn contrast to `\"patch\"`, optimistic locking is disabled.\nIf the master data entity instance does not exist it is created by applying the patch to an empty instance.\n\nThis change request operation is only supported if the customer explicitly restricts the landscape to a single-writer scenario.\n","required":["operation","changeToken","instance"],"properties":{"operation":{"description":"Requires operation to be `\"forcePatch\"`.","type":"string","enum":["forcePatch"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/PartialInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}}},"example":{"operation":"forcePatch","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d","displayName":"lorem"}}},"Delete":{"type":"object","description":"Use the change request operation `\"delete\"` to delete a previously replicated master data entity instance.\n\nIf the change request operation is accepted, Master Data Integration immediately marks the master data entity instance as deleted.\nInstances that are marked as deleted are also physically deleted after a retention period.\n","properties":{"operation":{"description":"Requires the operation to be `\"delete\"`.","type":"string","enum":["delete"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"previousVersionId":{"$ref":"#/components/schemas/PreviousVersionId"}},"required":["operation","changeToken","instance","previousVersionId"],"example":{"operation":"delete","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","previousVersionId":"3e466144-8238-4f41-91a5-bea24198bce7","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d"}}},"ForceDelete":{"type":"object","description":"The change request operation `\"forceDelete\"` is a variant of `\"delete\"` where optimistic locking is disabled.\n\nAs with `\"delete\"`, the master data entity instance is marked as deleted and later physically deleted.\nIf the master data entity instance does not exist the change request operation is rejected.\n\nIn contrast to `\"delete\"`, optimistic locking is disabled.\n\nThis change request operation is only supported if the customer explicitly restricts the landscape to a single-writer scenario.\n","properties":{"operation":{"description":"Requires the operation to be `\"forceDelete\"`.","type":"string","enum":["forceDelete"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"}},"required":["operation","changeToken","instance"],"example":{"operation":"forceDelete","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d"}}},"BatchRequest":{"type":"object","description":"Use batch request to send out multiple change requests in single request.","properties":{"@odata.context":{"type":"string","description":"This field is added to support the OData compliance. User can provide any valid string here.\n","example":"#$delta"},"value":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/Create"},{"$ref":"#/components/schemas/Update"},{"$ref":"#/components/schemas/ForceUpdate"},{"$ref":"#/components/schemas/Patch"},{"$ref":"#/components/schemas/ForcePatch"},{"$ref":"#/components/schemas/Delete"},{"$ref":"#/components/schemas/ForceDelete"},{"$ref":"#/components/schemas/PatchMetadata"}]},"required":["value","@odata.context"]}}},"PatchMetadata":{"type":"object","description":"Request an update of metadata fields of master data entity instance such as `\"localIds\"`.\n","required":["operation","changeToken","previousVersionId","instance","localIds_delta"],"properties":{"operation":{"description":"Requires operation to be `\"patchMetadata\"`.","type":"string","enum":["patchMetadata"]},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"previousVersionId":{"$ref":"#/components/schemas/PreviousVersionId"},"localIds_delta":{"type":"array","items":{"$ref":"#/components/schemas/LocalIdDelta"}}},"example":{"operation":"patchMetadata","changeToken":"67e692c5-7fb3-4e54-9587-403ebe135894","instance":{"id":"b8765843-c969-4ce8-8846-45229cc6334d"},"previousVersionId":"3e466144-8238-4f41-91a5-bea24198bce7","localIds_delta":[{"context":{"application":"s4","tenant":"ET_503","additionalContext":"4132"},"_operation":"delete"}]}},"RejectionReason":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}}}}}}},"GenericError":{"type":"object","description":"Error responses follow the Common Structure as defined by the [SAP REST API Harmonization Direction](https://github.tools.sap/northstar/integration-kernel-services/blob/master/ap-iks-api-guidance/rest-api-harmonization/1.4.md#error-response-common-structure).\n","properties":{"code":{"description":"a technical code for the error situation to be used for support purposes.","type":"string"},"message":{"description":"a message describing the error","type":"string"},"details":{"description":"if applicable, contains nested error responses in an array of JSON objects that have `code` and `message`` properties with the same semantics as described above.","type":"array","items":{"$ref":"#/components/schemas/ErrorDetails"}},"target":{"description":"describes a data element, e.g., a resource path.","type":"string"}},"required":["code","message"]},"ValidationError":{"type":"object","required":["code","message","severity"],"properties":{"code":{"type":"string","example":"ValidationError"},"message":{"type":"string","example":"Element 'sap.odm.businesspartner.BusinessPartner.displayIds' is not valid"},"severity":{"type":"string","example":"error"}}},"BatchError":{"type":"object","required":["code","message","details","severity"],"properties":{"code":{"type":"string","example":"ExampleErrorCode"},"message":{"type":"string","example":"Example Error message."},"details":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/ValidationError"}]}}}},"BatchErrorOuter":{"type":"object","required":["changeToken","@Core.DataModificationException"],"properties":{"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"@Core.DataModificationException":{"type":"object","properties":{"failedOperation":{"type":"string","example":"insert"},"responseCode":{"type":"string","example":"400"},"info":{"$ref":"#/components/schemas/BatchError"},"severity":{"type":"string","example":"error"}}}}},"ErrorDetails":{"type":"object","required":["code","message"],"properties":{"code":{"description":"a technical code for the error situation to be used for support purposes.","type":"string"},"message":{"description":"a message describing the error","type":"string"}}},"InvalidRequest-400":{"type":"object","required":["code","message","details","target"],"properties":{"code":{"type":"string","example":"InvalidRequest"},"message":{"type":"string","example":"Invalid Request"},"details":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/ErrorDetails"}]}},"target":{"type":"string","example":"/v1/odm/{odm-version}/{odm-entity}/requests"}}},"InvalidDeltaToken-400":{"type":"object","required":["code","message","details","target"],"properties":{"code":{"type":"string","example":"InvalidDeltaToken"},"message":{"type":"string","example":"Invalid delta token"},"details":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/ErrorDetails"}]}},"target":{"type":"string","example":"/v1/odm/{odm-version}/{odm-entity}/events"}}},"CreatedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["created"],"description":"A string value denoting the type of this change event.\n`created` event is sometimes sent instead of `included` when a record is first replicated to a consuming client by Master Data Integration.\nNote that there is no guaranteed correlation between change requests and change event types.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}},"header":{"$ref":"#/components/schemas/Header"}},"required":["event","versionId","instance"]},"UpdatedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["updated"],"description":"A string value denoting the type of this change event.\n`updated` is sometimes sent instead of `included` when a record changes that was already replicated to the consuming client by Master Data Integration in an earlier event.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"previousInstance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}},"header":{"$ref":"#/components/schemas/Header"}},"required":["event","versionId","instance"]},"DeletedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["deleted"],"description":"A string value denoting the type of this change event.\n`deleted` event is sometimes sent instead of `excluded` when a record that was previously replicated to the receiving client has been deleted.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"header":{"$ref":"#/components/schemas/Header"}},"required":["event","versionId","instance"]},"RejectedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["rejected"],"description":"A string value denoting the type of this change event.\n`rejected` event is sent when a change request by the receiving system was rejected by Master Data Integration. Note that there is no guaranteed correlation between change requests and change event types.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"reason":{"$ref":"#/components/schemas/RejectionReason"}},"required":["event","changeToken","reason"]},"IncludedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["included"],"description":"A change event of type `included` is sent to replicate the properties of a record to a consuming client. For example, this can happen because\n- a record was created or updated in Master Data Integration - a record was previously `excluded` but will be replicated again due to\n  - a change of the properties of the record\n  - a filter configuration change\n- reconciliation for a record to this client was requested by a business user\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/CompleteInstancePayload"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}},"header":{"$ref":"#/components/schemas/Header"}},"required":["event","versionId","instance"]},"ExcludedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["excluded"],"description":"A change event of type `excluded` is sent to inform a consuming client that changes to a record are not be replicated to that system. For example, this can happen because\n- a record was previously replicated but will be filtered out due to\n  - a change of the properties of the record\n  - a filter configuration change\n- reconciliation for a record that is not replicated to this client was requested by a business user\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"previousInstance":{"$ref":"#/components/schemas/CompleteInstancePayload"}},"required":["event","versionId","instance"]},"AcceptedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["accepted"],"description":"A string value denoting the type of this change event.\n`accepted` event is sent when MDI accepted a change request but the corresponding change event cannot be exposed due to the master data object instance not being replicated because of filters. This event is sent only to the sender of the change request to provide confirmation. Note that there is no guaranteed correlation between change requests and change event types.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"}},"required":["event","versionId","instance"]},"MetadataUpdatedEvent":{"type":"object","properties":{"event":{"type":"string","enum":["metadataUpdated"],"description":"A string value denoting the type of this change event. `\"metadataUpdated\"` event may be sent when the metadata of an entity instance changes but the instance data does not change. Master Data Integration may reuse the version id in metadataUpdated event.\nNote that there is no guaranteed correlation between change requests and change event types.\n"},"changeToken":{"$ref":"#/components/schemas/ChangeToken"},"versionId":{"$ref":"#/components/schemas/VersionId"},"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"localIds":{"type":"array","items":{"$ref":"#/components/schemas/LocalId"}},"header":{"$ref":"#/components/schemas/Header"}},"required":["event","instance","versionId"]},"EventsResponse":{"type":"object","properties":{"@odata.nextLink":{"description":"An opaque, service generated link to be used by the client to retrieve subsequent updates to master data records. The link consists of an URL path and URL query parts.\nIt contains the `$deltatoken` query parameter which can be used to fetch next set of events.\nThe next link indicates a partial result and points to the next page of results. The final partial set of change events does not contain a next link, but instead contains a delta link.\n","type":"string"},"@odata.deltaLink":{"description":"An opaque, service generated link to be used by the client to retrieve subsequent updates to master data records. The link consists of an URL path and URL query parts.\nIt contains the `$deltatoken` query parameter which can be used to fetch next set of events.\nIf `pauseAtPhaseTransition` is set to true, the first delta link indicates the end of the initial load.\n","type":"string"},"value":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/CreatedEvent"},{"$ref":"#/components/schemas/UpdatedEvent"},{"$ref":"#/components/schemas/DeletedEvent"},{"$ref":"#/components/schemas/MetadataUpdatedEvent"},{"$ref":"#/components/schemas/IncludedEvent"},{"$ref":"#/components/schemas/ExcludedEvent"},{"$ref":"#/components/schemas/AcceptedEvent"},{"$ref":"#/components/schemas/RejectedEvent"}]}}},"required":["value","@odata.nextLink","@odata.deltaLink"]},"ChangeTokenResponse":{"type":"object","properties":{"changeToken":{"description":"A unique string chosen by the sending system for each change request.\n\nMaster Data Integration will process messages with the same change token only once (within a limited time frame).\nThis enables clients to resend change requests, if they run into a timeout and hence do not know whether or not the service accepted their change request.\n\nClients can correlate fetched events with change request sent with the changeToken. The changeToken will only be visible to the system which also submitted the change request.\nOther systems accessing the events in the tenant will see the same change event without the change token.\n\nChange tokens are visible to the authoring system when requesting the events with a delta token.\n","type":"string","example":"change-token-example-1"}}},"BatchResponse":{"type":"object","properties":{"@odata.context":{"description":"This field is added to support the OData compliance. MDI by default will send \"#$delta\" value in this field. Customers can ignore this field.\n","type":"string"},"value":{"type":"array","description":"Whether each change request in the batch is accepted for asynchronous processing.\n","items":{"oneOf":[{"$ref":"#/components/schemas/ChangeTokenResponse"},{"$ref":"#/components/schemas/BatchErrorOuter"}]}}},"required":["@odata.context","value"]},"ReconciliationSingle":{"type":"object","properties":{"instance":{"$ref":"#/components/schemas/InstanceIdentifier"},"serviceInstanceId":{"description":"The service instance id of the client to receive the retransmitted record.","type":"string"}}},"ReconciliationBulk":{"type":"object","properties":{"value":{"type":"array","items":{"$ref":"#/components/schemas/ReconciliationSingle"}}}},"Extensions":{"type":"object","required":["extensionId","extensionPoint","namespace","fieldName","type","isPotentiallySensitive"],"properties":{"extensionId":{"type":"string","format":"uuid","description":"Unique id of the extension"},"extensionPoint":{"type":"string","description":"The name of entity/type/aspect to be extended, it should be annotated with `@odm.extensible['primitives']` in the model"},"namespace":{"type":"string","description":"Namespace of the extension."},"fieldName":{"type":"string","description":"The name of the new extension field. It should follow the pattern `ext__<namespace>__<customName>`."},"type":{"description":"The type of the new extension field.","type":"string","enum":["String","Boolean","Date","DateTime","Double","Time","Integer","Decimal","UUID","Composition"]},"typeParameters":{"description":"Additional parameters to specify further restrictions on the type specified.\nUse [ExtensionPrimitive](#/components/schemas/ExtensionPrimitive) for primitive extension types (for instance, a field of type `string`).\nUse [ExtensionComposite](#/components/schemas/ExtensionComposite) for node extensions.\n","oneOf":[{"$ref":"#/components/schemas/ExtensionPrimitive"},{"$ref":"#/components/schemas/ExtensionComposite"}]},"soapParameters":{"type":"object","description":"Additional parameters required if the extension should also be used in for SOAP replication (only applicable for BusinessPartner and Product).","properties":{"target":{"type":"string","description":"The name of the field in the SOAP model."},"type":{"type":"string","description":"The type of the field in the SOAP model."},"namespace":{"type":"object","description":"Namespace of the extension in the SOAP model.","properties":{"prefix":{"type":"string","description":"Prefix/definition for the namespace url. It Should start with `extns`."},"value":{"type":"string","description":"The namespace url/value."}}},"overrides":{"type":"string","description":"This parameter is required for providing different soap parameters based for different destinations. Please note that values in the parameter won't be supported in the initial scope.\n"}}}}},"ExtensionPrimitive":{"type":"object","description":"Primitive extension type","properties":{"length":{"type":"integer"}}},"ExtensionComposite":{"type":"object","properties":{"name":{"type":"string","description":"name of the new node/aspect"},"relationship":{"type":"string","description":"It has strict value as \"one\" or \"many\""},"fields":{"description":"Composite extensions to be added\n\nSee [Extensions](#/components/schemas/Extensions) for details.\n","type":"array","items":{"$ref":"#/components/schemas/Extensions"}}}},"ExtensionsStatus":{"type":"object","properties":{"status":{"type":"string","enum":["activationInProgress","activated","failed"],"description":"response will have status value as activationInProgress, activated or failed depending upon extension's creation status"}},"required":["status"]},"Header":{"type":"object","description":"Additional metadata filled by Master Data Integration for a record.\n\nOnly included with `IncludeHeader` request parameter set to true.\n","properties":{"lastSignificantWriter":{"description":"Information identifying the client considered to be the last significant writer of the record.\n\nRecords may not have a a \"last significant writer\" in which case this field will be omitted.\n","type":"object","properties":{"clientId":{"description":"The Master Date Integration client id of the last significant writer.","type":"string","maxLength":36},"globalTenantId":{"description":"A name for the last significant writer (client) following the Globally Unique Tenant ID (GTID) specification.\n\nThe `globalTenantId` field is **not** guaranteed to be eventually consistent.\nThat is, consuming the log at different times can result in different values for the `globalTenantId` field of records.\n\nChange events will contain a `globalTenantId` value which was configured at any time for the sending client.\nWhen clients do two subsequent calls to Events API, the second call may have older values of `globalTenantId` than the first call.\n\nMaster Data Integration will omit the field in case a `globalTenantId` mapping cannot be determined.\nThis can happen in the following cases:\n\n- the instance was created without `globalTenantId` value\n- the `globalTenantId` was removed from the instance\n- the client was offboarded\n\nThe client id mapping for the GTID can be configured per client in the BTP cockpit.\nMaster Data Integration will reflect changes to the configuration earliest on the next change event for the record a client receives.\nIn particular, just changing the configuration will not result in a new change event.\n","type":"string","minLength":1,"maxLength":40},"logsys":{"description":"The identifier of the logical system of the last significant writer.\n\nThe `logsys` field is **not** guaranteed to be eventually consistent.\nThat is, consuming the log at different times can result in different values for the `logsys` field of records.\n\nChange events will contain a `logsys` value which was configured at any time for the sending client.\nWhen clients do two subsequent calls to Events API, the second call may have older values of `logsys` than the first call.\n\nMaster Data Integration will omit it in case a `logsys` mapping cannot be determined.\nThis can happen in the following cases:\n\n- if the instance was created without `logsys` value\n- if it was removed\n- if the client was offboarded\n\nThe client id mapping for the logical system can be configured per client in the BTP cockpit.\nMaster Data Integration will reflect changes to the configuration earliest on the next change event for the record a client receives.\nIn particular, just changing the configuration will not result in a new change event.\n","type":"string","minLength":1,"maxLength":10}},"required":["clientId"]}},"example":{"lastSignificantWriter":{"clientId":"d0e4ec15-cc1e-4ea3-8cbb-c357de252b07","globalTenantId":"2c0d9205-8e4e-427c-81cc-cf56004da50b","logsys":"ER1"}}},"DeltaTokenResponse":{"type":"object","properties":{"@odata.nextLink":{"description":"An opaque, service generated link to be used by the client to retrieve subsequent updates to master data records. The link consists of an URL path and URL query parts.\nIt contains the `$deltatoken` query parameter which can be used to fetch next set of events.\nThe next link indicates the possibility of a partial result and points to the next page of results.\n","type":"string"},"@odata.deltaLink":{"description":"An opaque, service generated link to be used by the client to retrieve subsequent updates to master data records. The link consists of an URL path and URL query parts.\nIt contains the `$deltatoken` query parameter which can be used to fetch next set of events.\n","type":"string"}}}},"responses":{"202":{"description":"The 202 (Accepted) status code indicates that the change request has been accepted for asynchronous processing.\n\nThe change request can still be rejected during asynchronous processing.\nTo learn about the outcome of their change requests, systems should keep track of their change requests that have been accepted for asynchronous processing and use the change token to correlate fetched change events with sent change requests.\n"},"400":{"description":"The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something perceived as client error (e.g., malformed payload).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"InvalidJson","message":"invalid json in request body"}}}},"401":{"description":"The 401 (Unauthorized) status code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"InvalidToken","message":"Invalid access token."}}}},"403":{"description":"The 403 (Forbidden) status code indicates that the server understands the request but refuses to authorize it.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"InvalidGrantType","message":"Invalid grant type received."}}}},"404":{"description":"The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"ResourceNotFound","message":"Requested resource not found"}}}},"405":{"description":"The 405 (Method Not Allowed) status code indicates that the server knows the request method, but the target resource doesn't support this method.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"MethodNotAllowed","message":"HTTP method not allowed on the resource"}}}},"406":{"description":"The 406 (Not Acceptable) status code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"ContentTypeNotAcceptable","message":"Requested representation (content type as requested in the Accept header) not available for the resource\n"}}}},"408":{"description":"The 408 (Request Timeout) indicates that the request timed out and that the connection is to be shut down.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"RequestTimeout","message":"request timeout"}}}},"409":{"description":"The 409 (Conflict) indicates a request conflict with the current state of the target resource.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"OutdatedDeltaToken","message":"Sent delta token was too old, initial load needed to retrieve states"}}}},"410":{"description":"The 410 (Gone) indicates that the requested resource is no longer available.\nFor instance, this can happen if a client has waited too long to follow a delta link or a next link.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"OutdatedDeltaToken","message":"Sent delta token was too old, initial load needed to retrieve states"}}}},"429":{"description":"The 429 (Too Many Requests) is sent when the client has sent too many requests in a given amount of time (\"rate limiting\").","headers":{"Retry-After":{"$ref":"#/components/headers/Retry-After"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"TooManyRequests","message":"Client submitted to many requests"}}}},"500":{"description":"The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.","headers":{"Retry-After":{"$ref":"#/components/headers/Retry-After"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"PersistenceFailure","message":"Error while reading from persistency"}}}},"503":{"description":"The 503 (Service Unavailable) status code indicates that the server cannot process the request at the moment.","headers":{"Retry-After":{"$ref":"#/components/headers/Retry-After"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"},"example":{"code":"ServiceUnavailable","message":"Service is temporarily not available"}}}},"200-rest":{"description":"The log contains change events which encode changes to specific master data instances.\n\nSystems which also attempt to change master data will also find rejections here in case the service did not accept a specific change.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventsResponse"}}}},"202-batch":{"description":"The response indicates for each change request in the batch whether it is accepted for asynchronous processing.\n\nEntries in the response can be linked to the change requests in the batch via the change token. Entries for change requests that could not be accepted for asynchronous processing include an error message. If there is no error message given, the change request with that change token has been accepted for asynchronous processing.\n\nChange requests can still be rejected during asynchronous processing.\nTo learn about the outcome of their change requests, systems should keep track of their change requests that have been accepted for asynchronous processing and use the change token to correlate fetched change events with sent change requests.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchResponse"}}}},"5XX":{"description":"Unexpected server error."}},"securitySchemes":{"OAuth2":{"type":"oauth2","description":"OAuth client credentials (client ID and secret) are required.","flows":{"clientCredentials":{"tokenUrl":"{xsuaa_url}/oauth/token","scopes":{"uaa.user":"Scope granted only to business users.","Reconciliation.Write":"Request reconciliation of records to specific clients."}}}}}}}