{"query": "Retrieve the top 5 addresses ordered by city name in ascending order.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$top": 5, "$orderby": "city asc"}}], "file": "Address.json"}
{"query": "Get the address details for a specific city 'New York' and limit results to 10.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$filter": "city eq 'New York'", "$top": 10}}], "file": "Address.json"}
{"query": "Create a new address with detailed information including street, house number, city, and email.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "12345", "street": "5th Avenue", "houseNumber": "789", "city": "New York", "email": "example@example.com"}}}], "file": "Address.json"}
{"query": "Retrieve all address details and include the count of records.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$count": true}}], "file": "Address.json"}
{"query": "Fetch 10 addresses starting from the 5th record, ordered by postal code.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$top": 10, "$skip": 5, "$orderby": "postalCode"}}], "file": "Address.json"}
{"query": "Create two new addresses with full details.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "67890", "street": "Broadway", "houseNumber": "456", "city": "New York", "email": "user1@example.com"}}}, {"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "54321", "street": "Wall Street", "houseNumber": "123", "city": "New York", "email": "user2@example.com"}}}], "file": "Address.json"}
{"query": "Retrieve address details with reference to address ID '12345' and expand the records.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$filter": "address eq '12345'", "$expand": "*"}}], "file": "Address.json"}
{"query": "Fetch addresses with house numbers '123' or '456' and sort by street name in descending order.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$filter": "houseNumber eq '123' or houseNumber eq '456'", "$orderby": "street desc"}}], "file": "Address.json"}
{"query": "Create a batch of three new addresses.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "11111", "street": "First Street", "houseNumber": "1", "city": "Los Angeles", "email": "user3@example.com"}}}, {"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "22222", "street": "Second Avenue", "houseNumber": "2", "city": "Chicago", "email": "user4@example.com"}}}, {"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "POST", "endpoint": "/Address", "params": {"Address": {"address": "33333", "street": "Third Boulevard", "houseNumber": "3", "city": "San Francisco", "email": "user5@example.com"}}}], "file": "Address.json"}
{"query": "Get the addresses with city 'Los Angeles' and 'San Francisco', expand the records and limit to 5 results.", "answers": [{"api_name": "Address", "url": "https://sandbox.api.sap.com/sapreturnablepackagemanagement/odata/v4/MasterDataService", "method": "GET", "endpoint": "/Address", "params": {"$filter": "city eq 'Los Angeles' or city eq 'San Francisco'", "$expand": "*", "$top": 5}}], "file": "Address.json"}
{"query": "Retrieve the metadata of the SAP Data Warehouse catalog OData entities.", "answers": [{"api_name": "getMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/$metadata", "params": {}}], "file": "Catalog.json"}
{"query": "Fetch a list of all available SAP Data Warehouse catalog OData entities.", "answers": [{"api_name": "getCatalogResources", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog", "params": {}}], "file": "Catalog.json"}
{"query": "Get details of a specific asset by providing its compound key.", "answers": [{"api_name": "getAssetById", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/assets(spaceName='space1',name='asset1')", "params": {"assetCompoundId": "spaceName='space1',name='asset1'"}}], "file": "Catalog.json"}
{"query": "List all available spaces in the SAP Data Warehouse Cloud.", "answers": [{"api_name": "getSpaces", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces", "params": {}}], "file": "Catalog.json"}
{"query": "Obtain details for a specific space using the space ID.", "answers": [{"api_name": "getSpaceById", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces('space1')", "params": {"spaceId": "space1"}}], "file": "Catalog.json"}
{"query": "Fetch a list of all assets within a specific space using the space ID.", "answers": [{"api_name": "getAssetsBySpace", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces('space1')/assets", "params": {"spaceId": "space1"}}], "file": "Catalog.json"}
{"query": "Retrieve details about a specific asset within a space using space ID and asset ID.", "answers": [{"api_name": "getAssetIdFromSpace", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces('space1')/assets('asset1')", "params": {"spaceId": "space1", "assetId": "asset1"}}], "file": "Catalog.json"}
{"query": "Get metadata and list all available assets.", "answers": [{"api_name": "getMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/$metadata", "params": {}}, {"api_name": "getAssets", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/assets", "params": {}}], "file": "Catalog.json"}
{"query": "Fetch all available spaces and detail one specific space using its ID.", "answers": [{"api_name": "getSpaces", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces", "params": {}}, {"api_name": "getSpaceById", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces('space1')", "params": {"spaceId": "space1"}}], "file": "Catalog.json"}
{"query": "Get details of a specific asset by its compound key and list all assets in the same space.", "answers": [{"api_name": "getAssetById", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/assets(spaceName='space1',name='asset1')", "params": {"assetCompoundId": "spaceName='space1',name='asset1'"}}, {"api_name": "getAssetsBySpace", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/catalog/spaces('space1')/assets", "params": {"spaceId": "space1"}}], "file": "Catalog.json"}
{"query": "Retrieve details of banks in the United States and Canada.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/Bank", "params": {"$filter": "BankCountry eq 'US' or BankCountry eq 'CA'", "$select": ["BankCountry", "BankInternalID", "LongBankName", "SWIFTCode"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve the addresses of all banks in Germany.", "answers": [{"api_name": "Bank Address", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/BankAddress", "params": {"$filter": "BankCountry eq 'DE'", "$select": ["BankCountry", "BankInternalID", "StreetName", "CityName", "PostalCode"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve detailed information about the bank with BankInternalID '12345' in the United Kingdom.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/Bank/GB/12345", "params": {"$select": ["BankCountry", "BankInternalID", "LongBankName", "LongBankBranch", "SWIFTCode"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve details of banks in France that are not marked for deletion and order them by Bank Number.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/Bank", "params": {"$filter": "BankCountry eq 'FR' and IsMarkedForDeletion eq false", "$orderby": ["BankNumber"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve the international address version of the bank with BankInternalID '67890' in Japan.", "answers": [{"api_name": "Bank Scripted Address", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/BankScriptedAddress/JP/67890", "params": {"$select": ["BankCountry", "BankInternalID", "AddressRepresentationCode", "LongBankName", "StreetName", "CityName"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve addresses of banks in Italy.", "answers": [{"api_name": "Bank Address", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/BankAddress", "params": {"$filter": "BankCountry eq 'IT'", "$select": ["BankCountry", "BankInternalID", "StreetName", "CityName", "PostalCode"]}}], "file": "CE_BANK_0003.json"}
{"query": "Create a new bank entity in Spain.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "POST", "endpoint": "/Bank", "params": {"BankCountry": "ES", "BankInternalID": "98765", "LongBankName": "Banco de España", "SWIFTCode": "ESPBESMMXXX", "BankNumber": "1234567890"}}], "file": "CE_BANK_0003.json"}
{"query": "Create multiple banks in batch in Brazil and Mexico.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003/$batch", "method": "POST", "endpoint": "/$batch", "params": {"requests": [{"method": "POST", "url": "/Bank", "body": {"BankCountry": "BR", "BankInternalID": "54321", "LongBankName": "Banco do Brasil", "SWIFTCode": "BRASBRRXXXX", "BankNumber": "9876543210"}}, {"method": "POST", "url": "/Bank", "body": {"BankCountry": "MX", "BankInternalID": "67890", "LongBankName": "Banco de México", "SWIFTCode": "BNMXMXMMXXX", "BankNumber": "1122334455"}}]}}], "file": "CE_BANK_0003.json"}
{"query": "Update the SWIFT code of the bank with BankInternalID '12345' in the Netherlands.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "PATCH", "endpoint": "/Bank/NL/12345", "params": {"SWIFTCode": "NLDNLSMMXXX"}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve information about a bank and its address in Australia.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/Bank/AU/54321", "params": {"$expand": ["_BankAddress"]}}], "file": "CE_BANK_0003.json"}
{"query": "Retrieve a list of all banks in Japan, including their international address versions.", "answers": [{"api_name": "Bank", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_bank/srvd_a2x/sap/bank/0003", "method": "GET", "endpoint": "/Bank", "params": {"$filter": "BankCountry eq 'JP'", "$expand": ["_BankScriptedAddress"]}}], "file": "CE_BANK_0003.json"}
{"query": "Get user status change records and include their descriptions.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus", "params": {"$select": "ChangeRecordStatus,ChangeRecordStatusDescription"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Retrieve the user status change record with status code '01' and include related text.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus/01", "params": {"$expand": "_Text"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Get all user status change records sorted by their status description in descending order.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus", "params": {"$orderby": "ChangeRecordStatusDescription desc"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Fetch the user status change records with status code '02' and filter by language 'EN'.", "answers": [{"api_name": "Change Record User Status Text", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatusText/EN/02", "params": {"$select": "Language,ChangeRecordStatus,ChangeRecordStatusDescription"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "List user status change records along with their texts, showing only the first 10 items.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus", "params": {"$top": 10, "$expand": "_Text"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Retrieve user status change records skipping the first 5 items, and include a count of total items.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus", "params": {"$skip": 5, "$count": true}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Fetch user status change records containing the text 'In Progress'.", "answers": [{"api_name": "Change Record User Status", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "GET", "endpoint": "/A_ChgRecordUserStatus", "params": {"$search": "In Progress"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Batch request: Get user status change records and their descriptions, and fetch the text for status code '03'.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "POST", "endpoint": "/$batch", "params": {"request_body": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatus?$select=ChangeRecordStatus,ChangeRecordStatusDescription HTTP/1.1\nAccept: application/json\n\n--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatus/03/_Text HTTP/1.1\nAccept: application/json\n\n--request-separator--"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Batch request: Get user status change records with status '04' and '05' descriptions.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "POST", "endpoint": "/$batch", "params": {"request_body": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatus/04?$select=ChangeRecordStatusDescription HTTP/1.1\nAccept: application/json\n\n--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatus/05?$select=ChangeRecordStatusDescription HTTP/1.1\nAccept: application/json\n\n--request-separator--"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Batch request: Fetch user status change records in English and Spanish.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_chgrecorduserstatus/srvd_a2x/sap/chgrecorduserstatus/0001", "method": "POST", "endpoint": "/$batch", "params": {"request_body": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatusText/EN HTTP/1.1\nAccept: application/json\n\n--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET /A_ChgRecordUserStatusText/ES HTTP/1.1\nAccept: application/json\n\n--request-separator--"}}], "file": "CE_CHGRECORDUSERSTATUS_0001.json"}
{"query": "Retrieve the first 20 Clock In Clock Out Groups, showing their codes and creation dates.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$top": 20, "$select": ["code", "createdAt"]}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Fetch details of the Clock In Clock Out Group with code 'GRP123'.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups('GRP123')", "params": {}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Get Clock In Clock Out Groups created after January 1, 2022, ordered by creation date descending, include their names.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$filter": "createdAt gt 2022-01-01T00:00:00Z", "$orderby": ["createdAt desc"], "$select": ["code", "name"]}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Retrieve the total count of Clock In Clock Out Groups.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$count": true}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Expand related Time Event Types for the Clock In Clock Out Group with code 'GRP123'.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups('GRP123')", "params": {"$expand": ["timeEventTypeNav"]}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Fetch the first 10 Clock In Clock Out Groups and skip the first 5.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$top": 10, "$skip": 5}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Retrieve Clock In Clock Out Groups with names containing 'Team' and sort by name.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$filter": "contains(name, 'Team')", "$orderby": ["name"]}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Get details and related Time Event Types of Clock In Clock Out Group 'GRP001' and 'GRP002'.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups('GRP001')", "params": {"$expand": ["timeEventTypeNav"]}}, {"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups('GRP002')", "params": {"$expand": ["timeEventTypeNav"]}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Retrieve Clock In Clock Out Groups created by 'admin'.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$filter": "createdBy eq 'admin'"}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Fetch first 10 Clock In Clock Out Groups with their names and creation dates, and total count of entities.", "answers": [{"api_name": "ClockInClockOutIntegration", "url": "https://apisalesdemo2.successfactors.eu/odatav4/timemanagement/timeeventprocessing/ClockInClockOutIntegration.svc/v1", "method": "GET", "endpoint": "/ClockInClockOutGroups", "params": {"$top": 10, "$select": ["name", "createdAt"], "$count": true}}], "file": "ClockInClockOutIntegration.json"}
{"query": "Retrieve the attendee list for user 'john_doe' with a maximum of 50 attendees.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"user": "john_doe", "limit": 50}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Get details of an attendee with ID '12345'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees/12345", "params": {}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Create a new attendee with first name 'Jane', last name 'Doe', and company 'Acme Corp'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/attendees", "params": {"content": {"FirstName": "Jane", "LastName": "Doe", "Company": "Acme Corp"}}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Update the company name of the attendee with ID '67890' to 'New Corp'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "PUT", "endpoint": "/expense/attendees/67890", "params": {"content": {"Company": "New Corp"}}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Retrieve all attendees with external IDs 'ext123' and 'ext456'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"externalID": "ext123,ext456"}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Fetch attendees of type 'EMPLOYEE' and limit results to 10.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"attendeeTypeID": "EMPLOYEE", "limit": 10}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Retrieve the attendee list for user 'alice_smith' and then get details of attendee with ID '78901'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"user": "alice_smith"}}, {"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees/78901", "params": {}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Create two new attendees, one for 'Bob Brown' from 'Tech Corp' and another for 'Sara White' from 'Biz Ltd'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/attendees", "params": {"content": {"FirstName": "Bob", "LastName": "Brown", "Company": "Tech Corp"}}}, {"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/attendees", "params": {"content": {"FirstName": "Sara", "LastName": "White", "Company": "Biz Ltd"}}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Fetch attendees of type 'SPOUSE' and then fetch another set of attendees with an offset of 10.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"attendeeTypeID": "SPOUSE"}}, {"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees", "params": {"offset": 10}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Get details of an attendee with ID '23456' and then update their company name to 'Global Inc'.", "answers": [{"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/attendees/23456", "params": {}}, {"api_name": "Attendees", "url": "https://hostname/concur/api/v3.0", "method": "PUT", "endpoint": "/expense/attendees/23456", "params": {"content": {"Company": "Global Inc"}}}], "file": "ConcurExpenseAttendees.json"}
{"query": "Can you get all expense entries for the user with report ID 'abc123'?", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"reportID": "abc123"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Retrieve expense entries that are billable and have VAT details.", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"isBillable": true, "hasVAT": true}}], "file": "ConcurExpenseEntries.json"}
{"query": "Fetch expense entries by payment type ID 'pay123' and attendee type code 'att456'.", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"paymentTypeID": "pay123", "attendeeTypeCode": "att456"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Create a new expense entry for user 'john.doe'.", "answers": [{"api_name": "CreateExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/entries", "params": {"content": {"Description": "Lunch with client", "TransactionAmount": 45.0, "TransactionCurrencyCode": "USD", "ExpenseTypeCode": "MEAL", "TransactionDate": "2023-10-01T00:00:00Z"}, "user": "john.doe"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Update the expense entry with ID 'exp789' for user 'jane.doe'.", "answers": [{"api_name": "UpdateExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "PUT", "endpoint": "/expense/entries/exp789", "params": {"content": {"Description": "Dinner with client", "TransactionAmount": 60.0}, "user": "jane.doe"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Delete an expense entry with ID 'exp101' for user 'admin'.", "answers": [{"api_name": "DeleteExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "DELETE", "endpoint": "/expense/entries/exp101", "params": {"user": "admin"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Retrieve the expense entry with ID 'exp202' for user 'manager'. Also, fetch all expense entries with the same report ID 'report303' and limit the results to 10 entries.", "answers": [{"api_name": "GetSingleExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries/exp202", "params": {"user": "manager"}}, {"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"reportID": "report303", "limit": 10}}], "file": "ConcurExpenseEntries.json"}
{"query": "Fetch all expense entries that have attendees and are personal expenses for user 'user123'.", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"hasAttendees": true, "isPersonal": true, "user": "user123"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Create multiple new expense entries for user 'finance.admin'.", "answers": [{"api_name": "CreateExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/entries", "params": {"content": {"Description": "Office Supplies", "TransactionAmount": 150.0, "TransactionCurrencyCode": "USD", "ExpenseTypeCode": "SUPPLY", "TransactionDate": "2023-10-05T00:00:00Z"}, "user": "finance.admin"}}, {"api_name": "CreateExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "POST", "endpoint": "/expense/entries", "params": {"content": {"Description": "Taxi Fare", "TransactionAmount": 25.0, "TransactionCurrencyCode": "USD", "ExpenseTypeCode": "TRAVEL", "TransactionDate": "2023-10-05T00:00:00Z"}, "user": "finance.admin"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Fetch expense entries with attendee ID 'att789' and limit results to 5 entries.", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"attendeeID": "att789", "limit": 5}}], "file": "ConcurExpenseEntries.json"}
{"query": "Update an expense entry with ID 'exp404' to mark it as billable and change the description for user 'supervisor'.", "answers": [{"api_name": "UpdateExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "PUT", "endpoint": "/expense/entries/exp404", "params": {"content": {"IsBillable": true, "Description": "Client Meeting Lunch"}, "user": "supervisor"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Get expense entries for user 'employee1' with a batch ID 'batch112' and attendee type 'typeA'. Also, get the details for a specific expense entry with ID 'exp555'.", "answers": [{"api_name": "GetExpenseEntries", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries", "params": {"batchID": "batch112", "attendeeTypeCode": "typeA", "user": "employee1"}}, {"api_name": "GetSingleExpenseEntry", "url": "https://hostname/concur/api/v3.0", "method": "GET", "endpoint": "/expense/entries/exp555", "params": {"user": "employee1"}}], "file": "ConcurExpenseEntries.json"}
{"query": "Get the upcoming trips for the company between January 1, 2023, and June 30, 2023, and then retrieve the details of a specific trip with ID 123e4567-e89b-12d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-01-01", "endDateTo": "2023-06-30"}}, {"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/123e4567-e89b-12d3-a456-426614174000", "params": {"tripID": "123e4567-e89b-12d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Fetch all trips for the company that ended between February 1, 2023, and February 28, 2023.", "answers": [{"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-02-01", "endDateTo": "2023-02-28"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Retrieve trip details for trip ID 987e6543-e21b-45d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/987e6543-e21b-45d3-a456-426614174000", "params": {"tripID": "987e6543-e21b-45d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Get the upcoming trips for the company starting from trip ID 000e1234-e89b-12d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "startAfter": "000e1234-e89b-12d3-a456-426614174000"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Retrieve trip details for trip IDs 123e4567-e89b-12d3-a456-426614174000 and 987e6543-e21b-45d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/123e4567-e89b-12d3-a456-426614174000", "params": {"tripID": "123e4567-e89b-12d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}, {"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/987e6543-e21b-45d3-a456-426614174000", "params": {"tripID": "987e6543-e21b-45d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Get the upcoming trips for the company ending between March 1, 2023, and March 31, 2023, and then retrieve the details of trip ID 456e7890-d21b-45d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-03-01", "endDateTo": "2023-03-31"}}, {"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/456e7890-d21b-45d3-a456-426614174000", "params": {"tripID": "456e7890-d21b-45d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Fetch all trips for the company that ended between April 1, 2023, and April 30, 2023, and also get trip details for trip ID 567e1234-e89b-12d3-a456-426614174000.", "answers": [{"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-04-01", "endDateTo": "2023-04-30"}}, {"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/567e1234-e89b-12d3-a456-426614174000", "params": {"tripID": "567e1234-e89b-12d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Fetch all trips for the company that ended between May 1, 2023, and May 31, 2023.", "answers": [{"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-05-01", "endDateTo": "2023-05-31"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Retrieve trip details for trip ID 789e1234-e89b-12d3-a456-426614174000 and then fetch the upcoming trips for the company ending between June 1, 2023, and June 30, 2023.", "answers": [{"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips/789e1234-e89b-12d3-a456-426614174000", "params": {"tripID": "789e1234-e89b-12d3-a456-426614174000", "Accept-Encoding": "gzip", "Accept": "application/json"}}, {"api_name": "Itinerary API", "url": "https://eu2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "endDateFrom": "2023-06-01", "endDateTo": "2023-06-30"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Get the upcoming trips for the company starting from trip ID 111e1234-e89b-12d3-a456-426614174000 and ending on December 31, 2023.", "answers": [{"api_name": "Itinerary API", "url": "https://us2.api.concursolutions.com", "method": "GET", "endpoint": "/travel/v4/trips", "params": {"schema": "id", "startAfter": "111e1234-e89b-12d3-a456-426614174000", "endDateTo": "2023-12-31"}}], "file": "ConcurTravelItinerary.json"}
{"query": "Retrieve metadata for relational asset with space ID 'finance' and asset ID 'revenue'.", "answers": [{"api_name": "getRelationalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/finance/revenue/$metadata", "params": {}}], "file": "Consumption.json"}
{"query": "Fetch relational data for 'sales' space and 'products' asset with model ID 'productDetails'.", "answers": [{"api_name": "getRelationalData", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/sales/products/productDetails", "params": {}}], "file": "Consumption.json"}
{"query": "Get metadata for analytical asset within space 'marketing' and asset 'campaigns'.", "answers": [{"api_name": "getAnalyticalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/marketing/campaigns/$metadata", "params": {}}], "file": "Consumption.json"}
{"query": "Retrieve metadata for both relational and analytical assets in 'hr' space with asset ID 'employeeRecords'.", "answers": [{"api_name": "getRelationalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/hr/employeeRecords/$metadata", "params": {}}, {"api_name": "getAnalyticalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/hr/employeeRecords/$metadata", "params": {}}], "file": "Consumption.json"}
{"query": "Fetch list of models available in 'logistics' space for asset 'inventory'.", "answers": [{"api_name": "getRelationalEntities", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/logistics/inventory", "params": {}}], "file": "Consumption.json"}
{"query": "Retrieve both relational and analytical data for 'finance' space and 'budget' asset with model IDs 'currentBudget' and 'historicalData'.", "answers": [{"api_name": "getRelationalData", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/finance/budget/currentBudget", "params": {}}, {"api_name": "getAnalyticalData", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/finance/budget/historicalData", "params": {}}], "file": "Consumption.json"}
{"query": "Get analytical data for 'sales' space, 'performance' asset, and model ID 'monthlySales'.", "answers": [{"api_name": "getAnalyticalData", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/sales/performance/monthlySales", "params": {}}], "file": "Consumption.json"}
{"query": "Fetch metadata for relational and analytical assets in 'research' space with asset ID 'projectData'.", "answers": [{"api_name": "getRelationalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/research/projectData/$metadata", "params": {}}, {"api_name": "getAnalyticalMetadata", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/research/projectData/$metadata", "params": {}}], "file": "Consumption.json"}
{"query": "Fetch relational data for 'operations' space and 'equipment' asset with model ID 'equipmentStatus'.", "answers": [{"api_name": "getRelationalData", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/operations/equipment/equipmentStatus", "params": {}}], "file": "Consumption.json"}
{"query": "Retrieve lists of models for both relational and analytical assets in 'legal' space with asset ID 'caseFiles'.", "answers": [{"api_name": "getRelationalEntities", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/relational/legal/caseFiles", "params": {}}, {"api_name": "getAnalyticalEntities", "url": "https://your_tenant_name.eu10.hcs.cloud.sap/api", "method": "GET", "endpoint": "/v1/dwc/consumption/analytical/legal/caseFiles", "params": {}}], "file": "Consumption.json"}
{"query": "Retrieve data privacy consent statements for recruiting externals in the USA with default language.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "RECRUITING_EXTERNAL", "country": "USA", "language": "default"}}], "file": "PLTDPCS.json"}
{"query": "Fetch data privacy consent statements for profile photos in China, in Chinese language.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "PROFILE_PHOTO", "country": "CHN", "language": "zh_CN_SF"}}], "file": "PLTDPCS.json"}
{"query": "Get data privacy consent statements for recruiting externals in Germany.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "RECRUITING_EXTERNAL", "country": "DEU"}}], "file": "PLTDPCS.json"}
{"query": "View the status of data privacy consent statements for recruiting externals in the USA with candidate ID 12345.", "answers": [{"api_name": "GetDPCSAcknowledgements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/acknowledgements", "params": {"type": "RECRUITING_EXTERNAL", "country": "USA", "subjectId": "12345"}}], "file": "PLTDPCS.json"}
{"query": "Retrieve both data privacy consent statements and acknowledgements for profile photos in Brazil, in Portuguese.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "PROFILE_PHOTO", "country": "BRA", "language": "pt_BR"}}, {"api_name": "GetDPCSAcknowledgements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/acknowledgements", "params": {"type": "PROFILE_PHOTO", "country": "BRA", "subjectId": "67890", "language": "pt_BR"}}], "file": "PLTDPCS.json"}
{"query": "Get data privacy consent statements for recruiting externals in India with custom field value 'HR'.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "RECRUITING_EXTERNAL", "country": "IND", "customFieldValue": "HR"}}], "file": "PLTDPCS.json"}
{"query": "Fetch acknowledgements for profile photos with assignment ID 54321 in the UK.", "answers": [{"api_name": "GetDPCSAcknowledgements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/acknowledgements", "params": {"type": "PROFILE_PHOTO", "country": "GBR", "subjectId": "54321"}}], "file": "PLTDPCS.json"}
{"query": "Update the status of a data privacy consent statement for recruiting externals in the USA to accept with statement ID 1 and candidate ID 12345.", "answers": [{"api_name": "UpdateDPCSAcknowledgement", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "POST", "endpoint": "/acknowledgements", "params": {"type": "RECRUITING_EXTERNAL", "statementId": "1", "subjectId": "12345", "action": 1}}], "file": "PLTDPCS.json"}
{"query": "Retrieve data privacy consent statements for both recruiting externals and profile photos in Canada.", "answers": [{"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "RECRUITING_EXTERNAL", "country": "CAN"}}, {"api_name": "GetDPCSStatements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/statements", "params": {"type": "PROFILE_PHOTO", "country": "CAN"}}], "file": "PLTDPCS.json"}
{"query": "Get the status of data privacy consent statements for profile photos in Mexico with assignment ID 98765 and custom field value 'Marketing'.", "answers": [{"api_name": "GetDPCSAcknowledgements", "url": "https://apisalesdemo8.successfactors.com/rest/security/privacy/v1", "method": "GET", "endpoint": "/acknowledgements", "params": {"type": "PROFILE_PHOTO", "country": "MEX", "subjectId": "98765", "customFieldValue": "Marketing"}}], "file": "PLTDPCS.json"}
{"query": "Get the route map steps for review ID 12345", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/12345", "params": {"locale": "en_US"}}], "file": "PMGMPerformanceREST.json"}
{"query": "Update the modify-stage steps for review ID 67890 with new roles", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/67890/modifySteps", "params": {"value": [{"stepId": "step1", "stepType": "EM", "stepName": "Evaluation", "stepOrder": 1, "current": false, "completed": false, "status": "pending", "userId": "user123", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Update the signature-stage steps for review ID 54321 with new roles", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/54321/signoffSteps", "params": {"value": [{"stepId": "step2", "stepType": "EH", "stepName": "Sign Off", "stepOrder": 2, "current": false, "completed": false, "status": "pending", "userId": "user456", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Fetch and update the modify-stage steps for reviews 11111 and 22222", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/11111", "params": {"locale": "en_US"}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/11111/modifySteps", "params": {"value": [{"stepId": "step3", "stepType": "EM", "stepName": "Evaluation", "stepOrder": 1, "current": false, "completed": false, "status": "pending", "userId": "user789", "subSteps": []}]}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/22222", "params": {"locale": "fr_FR"}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/22222/modifySteps", "params": {"value": [{"stepId": "step4", "stepType": "EH", "stepName": "Approval", "stepOrder": 2, "current": false, "completed": false, "status": "pending", "userId": "user101", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Retrieve route map steps for review ID 13579 in Spanish locale", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/13579", "params": {"locale": "es_ES"}}], "file": "PMGMPerformanceREST.json"}
{"query": "Update the modify-stage and signature-stage steps for review ID 24680", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/24680/modifySteps", "params": {"value": [{"stepId": "step5", "stepType": "EM", "stepName": "Evaluation", "stepOrder": 1, "current": false, "completed": false, "status": "pending", "userId": "user202", "subSteps": []}]}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/24680/signoffSteps", "params": {"value": [{"stepId": "step6", "stepType": "EH", "stepName": "Sign Off", "stepOrder": 2, "current": false, "completed": false, "status": "pending", "userId": "user303", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Fetch route map steps for review ID 97531 with default locale", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/97531", "params": {}}], "file": "PMGMPerformanceREST.json"}
{"query": "Update modify-stage steps for reviews 12321 and 98765", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/12321/modifySteps", "params": {"value": [{"stepId": "step7", "stepType": "EM", "stepName": "Preparation", "stepOrder": 1, "current": false, "completed": false, "status": "pending", "userId": "user404", "subSteps": []}]}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/98765/modifySteps", "params": {"value": [{"stepId": "step8", "stepType": "EH", "stepName": "Review", "stepOrder": 2, "current": false, "completed": false, "status": "pending", "userId": "user505", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Fetch route map steps for review ID 24680 with locale set to German", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "GET", "endpoint": "/reviewRouteMaps/24680", "params": {"locale": "de_DE"}}], "file": "PMGMPerformanceREST.json"}
{"query": "Update signature-stage steps for reviews 13579 and 97531", "answers": [{"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/13579/signoffSteps", "params": {"value": [{"stepId": "step9", "stepType": "EM", "stepName": "Sign Off", "stepOrder": 1, "current": false, "completed": false, "status": "pending", "userId": "user606", "subSteps": []}]}}, {"api_name": "Performance Management", "url": "https://{api-server}/rest/talent/performance/admin/v1", "method": "PATCH", "endpoint": "/reviewRouteMaps/97531/signoffSteps", "params": {"value": [{"stepId": "step10", "stepType": "EH", "stepName": "Final Review", "stepOrder": 2, "current": false, "completed": false, "status": "pending", "userId": "user707", "subSteps": []}]}}], "file": "PMGMPerformanceREST.json"}
{"query": "Retrieve all sales areas with sales organization '1000' and distribution channel '10'.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$filter": "SalesOrganization eq '1000' and DistributionChannel eq '10'"}}], "file": "SALESAREA_0001.json"}
{"query": "Get sales area details for Sales Organization '2000', Distribution Channel '20' and Division '01'.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea/2000/20/01", "params": {}}], "file": "SALESAREA_0001.json"}
{"query": "Retrieve the first 10 sales areas.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$top": 10}}], "file": "SALESAREA_0001.json"}
{"query": "Get the total count of sales areas in the system.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$count": true}}], "file": "SALESAREA_0001.json"}
{"query": "Retrieve all sales areas, ordered by Sales Organization in descending order.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$orderby": "SalesOrganization desc"}}], "file": "SALESAREA_0001.json"}
{"query": "Get sales areas filtered by Division '02' and select Sales Organization and Distribution Channel fields.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$filter": "Division eq '02'", "$select": ["SalesOrganization", "DistributionChannel"]}}], "file": "SALESAREA_0001.json"}
{"query": "Retrieve all sales areas with Sales Organization '3000' and Division '03'. Also, get the total count of these records.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$filter": "SalesOrganization eq '3000' and Division eq '03'", "$count": true}}], "file": "SALESAREA_0001.json"}
{"query": "Retrieve sales areas for Sales Organization '4000' and Distribution Channel '30', ordered by Division.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "GET", "endpoint": "/SalesArea", "params": {"$filter": "SalesOrganization eq '4000' and DistributionChannel eq '30'", "$orderby": "Division"}}], "file": "SALESAREA_0001.json"}
{"query": "Batch request: Retrieve all sales areas and get the total count of these records.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "POST", "endpoint": "/$batch", "params": {"batch": [{"method": "GET", "endpoint": "/SalesArea", "params": {}}, {"method": "GET", "endpoint": "/SalesArea", "params": {"$count": true}}]}}], "file": "SALESAREA_0001.json"}
{"query": "Batch request: Retrieve sales areas filtered by Division '04', ordered by Sales Organization in ascending order, and get details for a specific Sales Organization '5000', Distribution Channel '40', Division '04'.", "answers": [{"api_name": "Sales Area - Read", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_salesarea/srvd_a2x/sap/salesarea/0001", "method": "POST", "endpoint": "/$batch", "params": {"batch": [{"method": "GET", "endpoint": "/SalesArea", "params": {"$filter": "Division eq '04'", "$orderby": "SalesOrganization"}}, {"method": "GET", "endpoint": "/SalesArea/5000/40/04", "params": {}}]}}], "file": "SALESAREA_0001.json"}
{"query": "Retrieve all consolidation fund hierarchies with a filter on the Financial Management Area.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy", "params": {"$filter": "FinancialManagementArea eq '1000'", "$select": ["FinancialManagementArea", "CnsldtnFundHierarchy", "ValidityEndDate"]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Get details of a specific consolidation fund hierarchy by its key values.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy/{FinancialManagementArea}/{CnsldtnFundHierarchy}/{ValidityEndDate}", "params": {"FinancialManagementArea": "1000", "CnsldtnFundHierarchy": "PrimaryFund", "ValidityEndDate": "2023-12-31", "$select": ["FinancialManagementArea", "CnsldtnFundHierarchy", "ValidityEndDate", "LastChangedByUser"]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Retrieve the top 10 consolidation fund hierarchies and their total count.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy", "params": {"$top": 10, "$count": true}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Get the related hierarchy nodes for a specific consolidation fund hierarchy.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy/{FinancialManagementArea}/{CnsldtnFundHierarchy}/{ValidityEndDate}/_HierarchyNode", "params": {"FinancialManagementArea": "1000", "CnsldtnFundHierarchy": "PrimaryFund", "ValidityEndDate": "2023-12-31"}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Retrieve the text details of a specific consolidation fund hierarchy.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy/{FinancialManagementArea}/{CnsldtnFundHierarchy}/{ValidityEndDate}/_Text", "params": {"FinancialManagementArea": "1000", "CnsldtnFundHierarchy": "PrimaryFund", "ValidityEndDate": "2023-12-31"}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Get all hierarchy nodes in a specific fund hierarchy, and order them by node sequence.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchyNode", "params": {"$filter": "CnsldtnFundHierarchy eq 'PrimaryFund'", "$orderby": "HierarchyNodeSequence"}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Retrieve all texts related to hierarchy nodes in a specific fund hierarchy.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchyNodeText", "params": {"$filter": "CnsldtnFundHierarchy eq 'PrimaryFund'", "$expand": ["_HierarchyNode"]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Get a specific hierarchy node along with its related hierarchy details.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchyNode/{FinancialManagementArea}/{CnsldtnFundHierarchy}/{HierarchyNode}/{ValidityEndDate}", "params": {"FinancialManagementArea": "1000", "CnsldtnFundHierarchy": "PrimaryFund", "HierarchyNode": "Node1", "ValidityEndDate": "2023-12-31", "$expand": ["_Hierarchy"]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Retrieve all consolidation fund hierarchies modified by a specific user.", "answers": [{"api_name": "Consolidation Fund Hierarchy", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "GET", "endpoint": "/CnsldtnFundHierarchy", "params": {"$filter": "LastChangedByUser eq 'user123'", "$select": ["FinancialManagementArea", "CnsldtnFundHierarchy", "LastChangedByUser", "LastChangeDateTime"]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Retrieve batch of fund hierarchies and their texts.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "POST", "endpoint": "/$batch", "params": {"requests": [{"method": "GET", "url": "/CnsldtnFundHierarchy", "params": {"$top": 5}}, {"method": "GET", "url": "/CnsldtnFundHierarchyText", "params": {"$top": 5}}]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
{"query": "Get all hierarchy nodes and texts for a specific fund hierarchy.", "answers": [{"api_name": "Batch Requests", "url": "https://{host}:{port}/sap/opu/odata4/sap/api_cnsldtnfundhierarchy/srvd_a2x/sap/cnsldtnfundhierarchy/0001", "method": "POST", "endpoint": "/$batch", "params": {"requests": [{"method": "GET", "url": "/CnsldtnFundHierarchyNode", "params": {"$filter": "CnsldtnFundHierarchy eq 'PrimaryFund'"}}, {"method": "GET", "url": "/CnsldtnFundHierarchyNodeText", "params": {"$filter": "CnsldtnFundHierarchy eq 'PrimaryFund'"}}]}}], "file": "sap-s4-CE_CNSLDTNFUNDHIERARCHY_0001-v1.json"}
