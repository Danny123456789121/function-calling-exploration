{
    "openapi": "3.0.0",
    "info": {
        "title": "Continuous Feedback",
        "version": "1.0",
        "description": "Use these APIs to manage Continuous Feedback data. \n\n These APIs are only available with the latest version of Continuous Performance Management (CPM)."
    },
    "x-sap-shortText": "APIs to access Continuous Feedback.",
    "x-sap-api-type": "ODATAV4",
    "x-odata-version": "4.0",
    "externalDocs": {
        "description": "Information about the Continuous Performance Feedback API is available on help.sap.com.",
        "url": "https://help.sap.com/docs/SAP_SUCCESSFACTORS_PLATFORM/9f5f060351034d98990213d077dab38a/9984ba036eb04bc7ae72d43cb7dce0d8.html"
    },
    "servers": [
        {
            "url": "https://{api-server}/odatav4/talent/continuousfeedback/v1",
            "variables": {
                "api-server": {
                    "description": "SuccessFactors Data Center host",
                    "default": ""
                }
            }
        }
    ],
    "tags": [
        {
            "name": "Feedback Requests"
        },
        {
            "name": "Feedback"
        },
        {
            "name": "User Capabilities"
        }
    ],
    "paths": {
        "/refreshMetadata": {
            "post": {
                "description": "This API allows users to refresh the continuous feedback service metadata.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Invoke action refreshMetadata",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Service Operations (Unbound Actions/Functions)"
                ]
            }
        },
        "/feedbackRequests('{recordId}')": {
            "get": {
                "description": "This API allows continuous feedback users to view a feedback request from another user.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect).",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "name": "recordId",
                        "in": "path",
                        "required": true,
                        "description": "key: recordId",
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/continuousfeedback.FeedbackRequests"
                                        }
                                    ]
                                },
                                "examples": {
                                    "success": {
                                        "summary": "View a feedback request that I received",
                                        "value": {
                                            "@odata.context": "https://<api-server>:443/odatav4/talent/continuousfeedback/v1/$metadata#feedbackRequests/$entity",
                                            "@odata.metadataEtag": "\"ae73e8d0-6d58-4e10-9e23-177656131830\"",
                                            "question3_FC": 1,
                                            "requesterDisplayName": "Carla Grant",
                                            "lastModifiedAt": "2022-04-06T14:16:06Z",
                                            "recipientDisplayName": "Alexander Thompson",
                                            "declined_FC": 1,
                                            "question3": "Any additional comments?",
                                            "subjectDisplayTitle": "VP, Sales",
                                            "question2": "What could I improve on?",
                                            "requesterDisplayTitle": "VP, Sales",
                                            "recipientAssignmentUUID": "BB152E19D6964473ADD4EC566F55F194",
                                            "question1": "What went well?",
                                            "recordId": "7F513CAE66C94D248EC51E57852026C8",
                                            "requestText": null,
                                            "createdAt": "2022-04-06T13:08:21Z",
                                            "requestId": 16613,
                                            "requestDate": "2022-04-06T20:08:20Z",
                                            "statusName": "Feedback Received",
                                            "requesterAssignmentUUID": "157B5821556C48C08F3C760EC33E826A",
                                            "feedbackResponse_FC": 1,
                                            "question1_FC":  1,
                                            "update_mc": false,
                                            "subjectUserAssignmentUUID": "157B5821556C48C08F3C760EC33E826A",
                                            "lastModifiedBy": "157B5821556C48C08F3C760EC33E826A",
                                            "recipientDisplayTitle": "President",
                                            "declined": false,
                                            "delete_mc": false,
                                            "statusId": "RESPONDED",
                                            "topic": "Feedback on Prioritization",
                                            "subjectDisplayName": "Carla Grant",
                                            "topic_FC": 1,
                                            "question2_FC": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "View a feedback request that isn't associated with me",
                                        "value": {
                                            "error": {
                                                "code": "NotFound",
                                                "message": "Record for entity feedbackRequests with key feedbackRequests/recordId=48549C10D6F24793AED69FEBC04AD45F does not exist. Please check the key value.",
                                                "details": [
                                                    {
                                                        "code": "COE0028",
                                                        "message": "Record for entity feedbackRequests with key feedbackRequests/recordId=48549C10D6F24793AED69FEBC04AD45F does not exist. Please check the key value."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query feedback request by record Id",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback Requests"
                ]
            },
            "patch": {
                "description": "This API allows continuous feedback users to decline a feedback request they have received from another user.",
                "parameters": [
                    {
                        "name": "recordId",
                        "in": "path",
                        "required": true,
                        "description": "key: recordId",
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "success": {
                                    "summary": "Successful Feedback Decline",
                                    "value": {
                                        "declined": "true"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "User who is not the requestee attempts to decline a request",
                                        "value": {
                                            "error": {
                                                "code": "BadRequest",
                                                "message": "Operation failed because of errors.",
                                                "details": [
                                                    {
                                                        "code": "COMDF_GENERAL_ERROR",
                                                        "message": "You are not permitted to decline this request. Only the feedback requestee is permitted to decline the feedback request.",
                                                        "@Common.numericSeverity": "4"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Decline feedback request",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback Requests"
                ]
            }
        },
        "/feedbackRequests": {
            "get": {
                "description": "This API allows continuous feedback users to query feedback request records.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                        "schema": {
                            "example": 50,
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$search",
                        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                        "schema": {
                            "type": "string"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "schema": {
                            "type": "string"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                        "schema": {
                            "type": "boolean"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/continuousfeedback.FeedbackRequests"
                                            }
                                        },
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Query feedback request records",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback Requests"
                ]
            },
            "post": {
                "description": "This API allows permissioned continuous feedback users to request feedback from another user. Users are required to input a Feedback Topic and at least the first question.\n\n Required role-based permissions:\n- Access Continuous Feedback\n- Request feedback from others\n- Limit about whom feedback can be requested",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "success": {
                                        "summary": "Create a new Feedback Request",
                                        "value": {
                                            "@odata.context": "https://<api-server>/odatav4/talent/continuousfeedback/ContinuousFeedback.svc/v1/$metadata#feedbackRequests/$entity",
                                            "@odata.metadataEtag": "\"e84a2c5e-950a-45b3-9fe9-4c78878a9bc1\"",
                                            "question3_FC": null,
                                            "requesterDisplayName": null,
                                            "recipientDisplayName": null,
                                            "declined_FC": null,
                                            "question3": "Any additional comments?",
                                            "subjectDisplayTitle": null,
                                            "question2": "What can be improved?",
                                            "requesterDisplayTitle": null,
                                            "recipientAssignmentUUID": "9C8A925415C2438EA19E73B6D79086EE",
                                            "question1": "What did I do well?",
                                            "recordId": "BD77640CEA7047F39505422F8BB88B86",
                                            "requestText": null,
                                            "requestId": null,
                                            "requestDate": null,
                                            "statusName": null,
                                            "requesterAssignmentUUID": "7F5F49E1595248F88C7C6F4DC4CE3E8F",
                                            "feedbackResponse_FC": null,
                                            "question1_FC": null,
                                            "update_mc": null,
                                            "subjectUserAssignmentUUID": "D28CD5FC79A34558B0FB4B4F045F8BEC",
                                            "recipientDisplayTitle": null,
                                            "declined": null,
                                            "delete_mc": null,
                                            "statusId": null,
                                            "topic": "Feedback Request",
                                            "subjectDisplayName": null,
                                            "topic_FC": null,
                                            "question2_FC": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Create a feedback request",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback Requests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-insertable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/continuousfeedback.FeedbackRequests"
                                    }
                                ]
                            },
                            "examples": {
                                "success": {
                                    "summary": "Create a new Feedback Request",
                                    "value": {
                                        "question1": "What did I do well?",
                                        "question2": "What can be improved?",
                                        "question3": "Any additional comments?",
                                        "topic": "Feedback Request",
                                        "subjectUserAssignmentUUID": "D28CD5FC79A34558B0FB4B4F045F8BEC",
                                        "requesterAssignmentUUID": "7F5F49E1595248F88C7C6F4DC4CE3E8F",
                                        "recipientAssignmentUUID": "9C8A925415C2438EA19E73B6D79086EE"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "description": "This API allows permissioned continuous feedback users to provide feedback or to respond to a feedback request.\n\n Required role-based permissions: \n -Access Continuous Feedback \n -Give Continuous Feedback \n\n In order to respond to a feedback request, you must also specify the feedback request record id in the request payload.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "success": {
                                        "summary": "Responding to a Feedback Request",
                                        "value": {
                                            "@odata.context": "https://<api-server>/odatav4/talent/continuousfeedback/ContinuousFeedback.svc/v1/$metadata#feedback/$entity",
                                            "@odata.metadataEtag": "\"d785296b-8c61-4cb5-90da-35dd4d431efc\"",
                                            "question3_FC": null,
                                            "answer2_FC": null,
                                            "answer3": null,
                                            "question3": "Any other comments?",
                                            "subjectDisplayTitle": null,
                                            "visibleToManager": null,
                                            "answer2": null,
                                            "feedbackId": null,
                                            "feedbackRequestRecordId": "6EDCCD70FF4447C2A6EB794C148C050E",
                                            "question2": "What can be improved?",
                                            "answer1": "Great job!",
                                            "question1": "What did I do well?",
                                            "recordId": "4B0E76DB5714440C86906B331B0EA060",
                                            "senderDisplayName": null,
                                            "answer1_FC": null,
                                            "dateReceived": null,
                                            "feedbackMessage": null,
                                            "question1_FC": null,
                                            "update_mc": null,
                                            "answer3_FC": null,
                                            "subjectUserAssignmentUUID": "7F5F49E1595248F88C7C6F4DC4CE3E8F",
                                            "dateModified": null,
                                            "senderUserAssignmentUUID": "B0FD084ED1F94E5E895A324266111805",
                                            "delete_mc": null,
                                            "senderDisplayTitle": null,
                                            "topic": "Demo Feedback",
                                            "subjectDisplayName": null,
                                            "topic_FC": null,
                                            "visibleToManager_FC": null,
                                            "question2_FC": null
                                        }
                                    }
                                }
                            }    
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Give feedback or respond to a feedback request",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-insertable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/continuousfeedback.Feedback"
                                    }
                                ]
                            },
                            "examples": {
                                "success": {
                                    "summary": "Responding to a Feedback Request",
                                    "value": {
                                        "question1": "What did I do well?",
                                        "answer1": "Great job!",
                                        "question2": "What can be improved?",
                                        "question3": "Any other comments?",
                                        "topic": "Demo Feedback",
                                        "subjectUserAssignmentUUID": "7F5F49E1595248F88C7C6F4DC4CE3E8F",
                                        "senderUserAssignmentUUID": "B0FD084ED1F94E5E895A324266111805",
                                        "feedbackRequestRecordId": "6EDCCD70FF4447C2A6EB794C148C050E"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "This API allows permissioned continuous feedback users to query feedback records.\n\n Required role-based permissions:\n- Access Continuous Feedback",
                "parameters": [
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                        "schema": {
                            "example": 50,
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$search",
                        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                        "schema": {
                            "type": "string"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "schema": {
                            "type": "string"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                        "schema": {
                            "type": "boolean"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/continuousfeedback.Feedback"
                                            }
                                        },
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Query feedback records",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback"
                ]
            }
        },
        "/feedback('{recordId}')": {
            "patch": {
                "description": "This API allows permissioned continuous feedback users to show or hide their feedback to their manager.\n\n Required role-based permissions:\n- Access Continuous Feedback\n\n Note: Feedback provided by a user's manager will always be visible to the manager.",
                "parameters": [
                    {
                        "name": "recordId",
                        "in": "path",
                        "required": true,
                        "description": "key: recordId",
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "error": {
                                        "summary": "Cannot change Feedback responses",
                                        "value": {
                                            "error": {
                                                "code": "BadRequest",
                                                "message": "Operation failed because of errors.",
                                                "details": [
                                                    {
                                                        "code": "COMDF_GENERAL_ERROR",
                                                        "message": "You cannot change the Feedback responses.",
                                                        "@Common.numericSeverity": "4"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "Update feedback visibility",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-insertable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/continuousfeedback.Feedback"
                                    }
                                ]
                            },
                            "examples": {
                                "success": {
                                    "summary": "Changing \"Visible to Manager\"",
                                    "value": {
                                        "visibleToManager": false
                                    }
                                },
                                "error": {
                                    "summary": "Cannot change Feedback responses",
                                    "value": {
                                        "answer1": "Great Job!"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "This API allows permissioned continuous feedback users to query a specific feedback record.\n\nRequired role-based permissions:\n- Access Continuous Feedback",
                "parameters": [
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "name": "recordId",
                        "in": "path",
                        "required": true,
                        "description": "key: recordId",
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Feedback",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/continuousfeedback.Feedback"
                                        }
                                    ]
                                },
                                "examples": {
                                    "success": {
                                        "summary": "Successful retrieval of feedback record",
                                        "value": {
                                            "question3_FC": 1,
                                            "answer2_FC": 1,
                                            "answer3": null,
                                            "question3": null,
                                            "subjectDisplayTitle": "Administrator",
                                            "visibleToManager": true,
                                            "answer2": null,
                                            "feedbackId": 3563,
                                            "feedbackRequestRecordId": null,
                                            "question2": null,
                                            "answer1": "Good work on Achievement. Need to improve on coding.",
                                            "question1": "Since we have worked together, I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadminp last",
                                            "recordId": "CBB104D87A8F4D5AA76D6C85154CCDB0",
                                            "senderDisplayName": "Carla Grant",
                                            "answer1_FC": 1,
                                            "dateReceived": "2017-10-05T09:27:27Z",
                                            "feedbackMessage": null,
                                            "question1_FC": 1,
                                            "update_mc": false,
                                            "answer3_FC": 1,
                                            "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                            "dateModified": "2018-01-11T21:57:43Z",
                                            "senderUserAssignmentUUID": "49EE183B2D00426799275141394CB0CB",
                                            "delete_mc": false,
                                            "senderDisplayTitle": "ct Lead!@#$%^&*()_+{}|:\">?<",
                                            "topic": null,
                                            "subjectDisplayName": "Admin User",
                                            "topic_FC": 1,
                                            "visibleToManager_FC": 0,
                                            "question2_FC": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error case for subject user you are trying to access for Continuous Feedback not in your target population, or error case for manager accessing \"not viewable to manager\" feedbacks.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "Getting a feedback record that does not exist",
                                        "value": {
                                            "error": {
                                                "code": "NotFound",
                                                "message": "Record for entity feedback with key feedback/recordId=3020CD4A1C8E4C0E8234DD64EC2C5A28 does not exist. Please check the key value.",
                                                "details": [
                                                    {
                                                        "code": "COE0028",
                                                        "message": "Record for entity feedback with key feedback/recordId=3020CD4A1C8E4C0E8234DD64EC2C5A28 does not exist. Please check the key value."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query feedback by record Id.",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "Feedback"
                ]
            }
        },
        "/feedback/getDefaultQuestions()": {
            "get": {
                "description": "This API allows continuous feedback users to query the default questions to be included in a feedback. The default questions are provided in the logged in user's locale.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "nullable": true,
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/continuousfeedback.DefaultQuestions"
                                        }
                                    ]
                                },
                                "examples": {
                                    "success": {
                                        "summary": "Get default questions",
                                        "value": {
                                            "@odata.context": "https://<api-server>/odatav4/talent/continuousfeedback/ContinuousFeedback.svc/v1/$metadata#ContinuousFeedback.svc.defaultQuestions",
                                            "@odata.metadataEtag": "\"01dca526-c40f-4507-ba9b-e430fd61a2e5\"",
                                            "question1": "What went well?",
                                            "question2": "What could I improve on?",
                                            "question3": "Any additional comments?"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "Error for when Continuous Feedback is disabled",
                                        "value": {
                                            "error": {
                                                "code": "NotFound",
                                                "message": "You can't access this feature. Please contact your HR Administrator for help."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query default questions",
                "x-action": false,
                "x-function": true,
                "tags": [
                    "Feedback"
                ]
            }
        },
        "/feedbackRequests/getDefaultQuestions()": {
            "get": {
                "description": "This API allows continuous feedback users to query the default questions to be included in a feedback request. The default questions are provided in the logged in user's locale.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "nullable": true,
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/continuousfeedback.DefaultQuestions"
                                        }
                                    ]
                                },
                                "examples": {
                                    "success": {
                                        "summary": "Get default questions",
                                        "value": {
                                            "@odata.context": "https://<api-server>/odatav4/talent/continuousfeedback/ContinuousFeedback.svc/v1/$metadata#ContinuousFeedback.svc.defaultQuestions",
                                            "@odata.metadataEtag": "\"01dca526-c40f-4507-ba9b-e430fd61a2e5\"",
                                            "question1": "What went well?",
                                            "question2": "What could I improve on?",
                                            "question3": "Any additional comments?"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "Error for when Continuous Feedback is disabled",
                                        "value": {
                                            "error": {
                                                "code": "NotFound",
                                                "message": "You can't access this feature. Please contact your HR Administrator for help."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query default questions",
                "x-action": false,
                "x-function": true,
                "tags": [
                    "Feedback Requests"
                ]
            }
        },
        "/userCapabilities('{targetUserAssignmentUUID}')": {
            "get": {
                "description": "This API allows a continuous feedback user to check which operations they can perform on the target user.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": false
                    },
                    {
                        "name": "targetUserAssignmentUUID",
                        "in": "path",
                        "required": true,
                        "description": "key: targetUserAssignmentUUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserCapabilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "UserCapabilities",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/continuousfeedback.UserCapabilities"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Query continuous feedback user capabilities",
                "x-action": false,
                "x-function": false,
                "tags": [
                    "User Capabilities"
                ]
            }
        },
        "/feedbackRequests/getMyPendingfeedbackRequests()": {
            "get": {
                "description":"This API allows continuous feedback users to query the feedback requests that are in pending status, requests with no response or requests that have been declined.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "success": {
                                        "summary": "Getting Pending Feedback Requests of a user",
                                        "value": {
                                            "@odata.context": "https://<api-server>/odatav4/talent/continuousfeedback/v1/$metadata#Collection(continuousfeedback.pendingFeedbackRequests)",
                                            "@odata.metadataEtag": "\"275ccde1-4743-4dbc-87b5-246109222d14\"",
                                            "value": [
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "What went well?",
                                                    "question2": "What could I improve on?",
                                                    "question3": "Any additional comments?",
                                                    "recordId": "6C050972061B49E5BA124C1ACE61CE16",
                                                    "requestDate": "2022-01-28T10:05:22Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "subjectUserDisplayName": "Admin User",
                                                    "topic": "topic"
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "What did I do well?",
                                                    "question2": "What can be improved?",
                                                    "question3": "Any other comments?",
                                                    "recordId": "FB0CB3A77E2647C09924C88311DCE74E",
                                                    "requestDate": "2020-10-08T21:53:18Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "49EE183B2D00426799275141394CB0CB",
                                                    "subjectUserDisplayName": "Carla Grant",
                                                    "topic": "Test topic"
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "Since we have worked together, I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadi adi adi",
                                                    "question2": null,
                                                    "question3": null,
                                                    "recordId": "95F4FCDD033B4D6DB9142BF0D33F75F5",
                                                    "requestDate": "2018-07-16T21:35:52Z",
                                                    "requesterAssignmentUUID": "CDD9764154804661A53D140354CD077F",
                                                    "requesterDisplayName": "adi adi adi",
                                                    "subjectUserAssignmentUUID": "CDD9764154804661A53D140354CD077F",
                                                    "subjectUserDisplayName": "adi adi adi",
                                                    "topic": null
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "Since we have worked together, I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadminp last",
                                                    "question2": null,
                                                    "question3": null,
                                                    "recordId": "F0705018C4A44FFA8494917B8768D902",
                                                    "requestDate": "2018-05-22T00:36:33Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "subjectUserDisplayName": "Admin User",
                                                    "topic": null
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "Since we have worked together on changed mind, I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadminp last",
                                                    "question2": null,
                                                    "question3": null,
                                                    "recordId": "2E4AAFDB374E43F1A8C8B90AA56B9DC6",
                                                    "requestDate": "2018-03-13T22:55:59Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "subjectUserDisplayName": "Admin User",
                                                    "topic": null
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "Since we have worked together on Activity not linked dev or perf goals, I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadminp last",
                                                    "question2": null,
                                                    "question3": null,
                                                    "recordId": "257E5B3C1CAD47419DCD230A7B08AD5B",
                                                    "requestDate": "2018-03-13T22:54:55Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "subjectUserDisplayName": "Admin User",
                                                    "topic": null
                                                },
                                                {
                                                    "recipientAssignmentUUID": "0289F04C3425403F81C28B323A1ED826",
                                                    "question1": "Since we have worked together on new act ach linked , I'd like to get your feedback. Could you please let me know what you think I did well and provide one constructive suggestion on what I could do better in the future?\n\nBest regards,\nadminp last",
                                                    "question2": null,
                                                    "question3": null,
                                                    "recordId": "91391FFBFB2B41C3949879A6B1963176",
                                                    "requestDate": "2018-03-13T22:52:57Z",
                                                    "requesterAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "requesterDisplayName": "Admin User",
                                                    "subjectUserAssignmentUUID": "D1BADA3B5AD04CA9ABA29DBC7C83A455",
                                                    "subjectUserDisplayName": "Admin User",
                                                    "topic": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/error"
                                        }
                                    ]
                                },
                                "examples": {
                                    "error": {
                                        "summary": "Continuous Feedback feature is not enabled",
                                        "value": {
                                            "error": {
                                                "code": "Not Found",
                                                "message": "You can't access this feature. Please contact your HR Administrator for help."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query pending feedback requests",
                "x-action": false,
                "x-function": true,
                "tags": [
                    "Feedback Requests"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "continuousfeedback.FeedbackRequests": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": true,
                "title": "feedbackRequests",
                "properties": {
                    "question3_FC": {
                        "title": "The property question3_FC indicates the field control value for question3 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "lastModifiedAt": {
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property lastModifiedAt is an MDF Audit Field representing when the feedback request was last modified.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "declined_FC": {
                        "title": "The property declined_FC indicates the field control value of the declined property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "question3": {
                        "nullable": true,
                        "x-insertable": true,
                        "title": "The property question3 represents the third question included in a feedback request.",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "question2": {
                        "nullable": true,
                        "x-insertable": true,
                        "title": "The property question2 represents the second question included in a feedback request.",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "question1": {
                        "x-insertable": true,
                        "title": "The property question1 represents the first question included in a feedback request.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "recipientDisplayTitle": {
                        "title": "The property recipientDisplayTitle represents the display title of the feedback recipient.",
                        "type": "string"
                    },
                    "recordId": {
                        "x-key": true,
                        "title": "The property recordId represents the record id of a feedback request.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "requestText": {
                        "x-insertable": true,
                        "x-filterable": true,
                        "title": "The property requestText holds the message of a feedback request. This is only populated when retrieving legacy feedback requests.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "createdAt": {
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property createdAt is an MDF Audit Field representing when the feedback request was created.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "requestId": {
                        "x-filterable": true,
                        "example": "42",
                        "title": "The property requestId represents the feedback request id.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "format": "int64"
                    },
                    "recipientDisplayName": {
                        "title": "The property recipientDisplayName represents the display name of the feedback recipient.",
                        "type": "string"
                    },
                    "requestDate": {
                        "x-filterable": true,
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property requestDate represents the date on which the feedback request was created.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "statusName": {
                        "title": "The property statusName represents the name of the feedback request status.",
                        "type": "string"
                    },
                    "recipientAssignmentUUID": {
                        "x-insertable": true,
                        "x-filterable": true,
                        "title": "The property recipientAssignmentUUID represents the user assignment UUID of the feedback recipient.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "feedbackResponse_FC": {
                        "title": "The property feedbackResponse_FC indicates the field control value for the feedbackResponse navigation.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "question1_FC": {
                        "title": "The property question1_FC indicates the field control value for question1 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "update_mc": {
                        "title": "The property update_mc indicates whether the feedback request can be updated by the logged on user.",
                        "type": "boolean"
                    },
                    "requesterAssignmentUUID": {
                        "x-insertable": true,
                        "x-filterable": true,
                        "title": "The property requesterAssignmentUUID represents the user assignment UUID of the feedback requester.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "subjectDisplayTitle": {
                        "title": "The property subjectDisplayTitle represents the display title of the subject of the feedback request.",
                        "type": "string"
                    },
                    "lastModifiedBy": {
                        "title": "The property lastModifiedBy is an MDF Audit Field representing the user that last modified the feedback request.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "subjectUserAssignmentUUID": {
                        "x-insertable": true,
                        "x-filterable": true,
                        "title": "The property subjectUserAssignmentUUID represents the user assignment UUID of the subject of the feedback request.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "requesterDisplayTitle": {
                        "title": "The property requesterDisplayTitle represents the display title of the feedback requester.",
                        "type": "string"
                    },
                    "declined": {
                        "nullable": true,
                        "title": "The property declined indicates whether a feedback request has been declined.",
                        "type": "boolean"
                    },
                    "subjectDisplayName": {
                        "title": "The property subjectDisplayName represents the display name of the subject of the feedback request.",
                        "type": "string"
                    },
                    "delete_mc": {
                        "title": "The property delete_mc indicates whether a feedback request can be deleted by the logged on user.",
                        "type": "boolean"
                    },
                    "statusId": {
                        "title": "The property statusId represents the feedback request status id.",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "createdBy": {
                        "title": "The property createdBy is an MDF Audit Field representing the user that created the feedback request.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "topic": {
                        "x-insertable": true,
                        "title": "The property topic represents the topic of the feedback request.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "topic_FC": {
                        "title": "The property topic_FC indicates the field control value for topic property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "question2_FC": {
                        "title": "The property question2_FC indicates the field control value for question2 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "requesterDisplayName": {
                        "title": "The property requesterDisplayName represents the display name of the feedback requester.",
                        "type": "string"
                    },
                    "feedbackResponse": {
                        "title": "The navigation feedbackResponse provides access to the feedback response when the requested user responds to a feedback request.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/continuousfeedback.Feedback"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "continuousfeedback.Feedback": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": true,
                "title": "feedback",
                "properties": {
                    "question3_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question3_FC indicates the field control value for question3 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "lastModifiedAt": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property lastModifiedAt is an MDF Audit Field representing when the feedback was last modified.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "answer2_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer2_FC indicates the field control value for answer2 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "answer3": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer3 captures the response to the third question in the feedback.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "question3": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question3 represents the third question in the feedback.",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "visibleToManager": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property visibleToManager indicates whether the feedback is made visible to the feedback recipient's manager.",
                        "type": "boolean"
                    },
                    "answer2": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer2 captures the response to the second question in the feedback.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "feedbackId": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "42",
                        "title": "The property feedbackId represents the feedback id.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "format": "int64"
                    },
                    "question2": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question2 represents the second question in the feedback.",
                        "maxLength": 250,
                        "type": "string"
                    },
                    "answer1": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer1 captures the response to the first question in the feedback.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "question1": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question1 represents the first question in the feedback.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "recordId": {
                        "x-key": true,
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property recordId represents the record id of the feedback.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "senderDisplayName": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property senderDisplayName represents the display name of the feedback sender.",
                        "type": "string"
                    },
                    "createdAt": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property createdAt is an MDF Audit Field representing when the feedback was created.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "answer1_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer1_FC indicates the field control value for answer1 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "dateReceived": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The dateReceived represents the date on which the feedback was received.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "feedbackMessage": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property feedbackMessage holds the message of the feedback. This is only populated when retrieving legacy feedback records.",
                        "maxLength": 4000,
                        "type": "string"
                    },
                    "question1_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question1_FC indicates the field control value for question1 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "feedbackRequestRecordId": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "42",
                        "title": "The property feedbackRequestRecordId represents the id of the feedback request in response to which this feedback was provided.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "format": "int64"
                    },
                    "update_mc": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property update_mc indicates whether the feedback can be updated by the logged on user.",
                        "type": "boolean"
                    },
                    "senderDisplayTitle": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property senderDisplayTitle represents the display title of the feedback sender.",
                        "type": "string"
                    },
                    "senderUserAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property senderUserAssignmentUUID represents the user assignment UUID of the feedback sender.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "subjectDisplayTitle": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property subjectDisplayTitle represents the display title of the feedback subject.",
                        "type": "string"
                    },
                    "answer3_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property answer3_FC indicates the field control value for answer3 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "lastModifiedBy": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property lastModifiedBy is an MDF Audit Field representing the user that last modified the feedback.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "dateModified": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "2017-04-13T15:51:04Z",
                        "title": "The property dateModified represents the date on which the feedback record was last modified.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "subjectUserAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property subjectUserAssignmentUUID represents the user assignment UUID of the feedback subject.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "subjectDisplayName": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property subjectDisplayName represents the display name of the feedback subject.",
                        "type": "string"
                    },
                    "delete_mc": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property delete_mc indicates whether a feedback record can be deleted by the logged on user.",
                        "type": "boolean"
                    },
                    "createdBy": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property createdBy is an MDF Audit Field representing the user that created the feedback.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "topic": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property topic represents the topic of the feedback.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "topic_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property topic_FC indicates the field control value for topic property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "visibleToManager_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property visibleToManager_FC indicates the field control value for visibleToManager property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "question2_FC": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question2_FC indicates the field control value for question2 property.",
                        "type": "integer",
                        "format": "uint8"
                    },
                    "feedbackRequest": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The navigation feedbackRequest provides access to the feedback request in response to which the feedback was provided.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/continuousfeedback.FeedbackRequests"
                            }
                        ]
                    },
                    "recipients": {
                        "x-filterable": true,
                        "title": "The navigation recipients provides access to the list of recipients to whom the feedback was sent.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/continuousfeedback.Recipient"
                        }
                    }
                },
                "type": "object"
            },
            "continuousfeedback.Recipient": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": true,
                "title": "recipients",
                "properties": {
                    "externalCode": {
                        "nullable": true,
                        "x-filterable": true,
                        "example": "42",
                        "title": "The property externalCode represents an alternate identifier for the recipient entity.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "format": "int64"
                    },
                    "feedbackRecipientAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property feedbackRecipientAssignmentUUID represents the user assignment UUID of the feedback recipient.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "parent": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property parent represents the parent entity's id, specifically a feedback id.",
                        "maxLength": 38,
                        "type": "string"
                    },
                    "parentRecordId": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property parentRecordId represents the parent entity's record id, specifically a feedback record id.",
                        "maxLength": 38,
                        "type": "string"
                    },
                    "recordId": {
                        "x-key": true,
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property recordId represents a unique identifier for the recipient entity.",
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "continuousfeedback.UserCapabilities": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": true,
                "title": "userCapabilities",
                "properties": {
                    "canRequestFeedbackFromTargetUser": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property canRequestFeedbackFromTargetUser indicates whether the logged on user has permission to request feedback from the target user.",
                        "type": "boolean"
                    },
                    "targetUserAssignmentUUID": {
                        "x-key": true,
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property targetUserAssignmentUUID represents the user assignment UUID of the target user. User capabilities are computed for the logged on user regarding interacting with the target user.",
                        "type": "string"
                    },
                    "canGiveFeedbackToTargetUser": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property canGiveFeedbackToTargetUser indicates whether the logged on user has permission to give feedback to the target user.",
                        "type": "boolean"
                    },
                    "canRequestFeedbackAboutTargetUser": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property canRequestFeedbackAboutTargetUser indicates whether the logged on user has permission to request feedback about the target user.",
                        "type": "boolean"
                    },
                    "canGiveFeedback": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property canGiveFeedback indicates whether the logged on user has permission to give feedback.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "continuousfeedback.DefaultQuestions": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": false,
                "title": "defaultQuestions",
                "properties": {
                    "question1": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question1 represents the default text for the first question in the feedback or feedback request.",
                        "type": "string"
                    },
                    "question2": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question2 represents the default text for the second question in the feedback or feedback request.",
                        "type": "string"
                    },
                    "question3": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question3 represents the default text for the third question in the feedback or feedback request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "continuousfeedback.PendingFeedbackRequests": {
                "x-insertable": false,
                "x-updatable": false,
                "x-deletable": false,
                "x-isEntity": false,
                "title": "pendingFeedbackRequests",
                "properties": {
                    "recipientAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property recipientAssignmentUUID represents the user assignment UUID of the feedback request recipient.",
                        "type": "string"
                    },
                    "question1": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question1 represents the first question included in a feedback request.",
                        "type": "string"
                    },
                    "question2": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question2 represents the second question included in a feedback request.",
                        "type": "string"
                    },
                    "question3": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property question3 represents the third question included in a feedback request.",
                        "type": "string"
                    },
                    "recordId": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property recordId represents the record id of a feedback request.",
                        "type": "string"
                    },
                    "requestDate": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property requestDate represents the date on which the feedback request was created.",
                        "type": "string"
                    },
                    "requesterDisplayName": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property requesterDisplayName represents the display name of the Feedback requester.",
                        "type": "string"
                    },
                    "requesterAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property requesterAssignmentUUID represents the user assignment UUID of the feedback requester.",
                        "type": "string"
                    },
                    "subjectUserDisplayName": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property subjectUserDisplayName represents the display name of the feedback subject.",
                        "type": "string"
                    },
                    "subjectUserAssignmentUUID": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property subjectUserAssignmentUUID represents the user assignment UUID of the feedback request subject.",
                        "type": "string"
                    },
                    "topic": {
                        "nullable": true,
                        "x-filterable": true,
                        "title": "The property topic represents the topic of the feedback request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "count": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "The number of records in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
            },
            "error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                "schema": {
                    "type": "boolean"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [{
        "basicAuth": []
    }]
}